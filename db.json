{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1486300675000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1486300675000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1486300675000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1486300675000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1486300675000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1486300675000},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1486300675000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1486300675000},{"_id":"themes/next/_config.yml","hash":"f31489347a005908d3574da8bc6fdcabb377f355","modified":1486300675000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1486300675000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1486300675000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1486300675000},{"_id":"source/_posts/2016-12-25-日志.md","hash":"086314b62961855f74bea9c3a29670d1948509f5","modified":1485442312000},{"_id":"source/_posts/2016-12-26-日志.md","hash":"f906791db9c9a9110c989bbae84616cf43bdb2e4","modified":1485442312000},{"_id":"source/_posts/2016-12-27-日志.md","hash":"6395066de0c8904d68e535c49223e1b91337f529","modified":1485442312000},{"_id":"source/_posts/2017-01-01-日志.md","hash":"1bd1694fa842e875c0141cb8bba2f58982327cd3","modified":1485442312000},{"_id":"source/_posts/C程序设计语言：第一章.md","hash":"fa02c29b0c17503f6f87dd992015f2ae6bd424f5","modified":1486301398000},{"_id":"source/_posts/TOMCAT假死分析.md","hash":"300d3a451fc6acf8743f43331658ff62f3ba45bd","modified":1486302366000},{"_id":"source/_posts/lucune初体验.md","hash":"b92ff40fd592f4502be1bc3e84f47ca23bdedfbd","modified":1485506718000},{"_id":"source/_posts/mac开发环境搭建小记.md","hash":"eb4307980a5706957c906a895db466840ab1d664","modified":1485482675000},{"_id":"source/_posts/动态数据源路由容易掉进去的坑.md","hash":"3724cd8c94901c253dc21b63d47b0ae555192154","modified":1485442312000},{"_id":"source/_posts/博客环境搭建.md","hash":"ba8344197f470b7b5756574495e2543df859ba26","modified":1485442312000},{"_id":"source/categories/index.md","hash":"47249b118a8cd9acf493d1eed704a4da3af3c30e","modified":1485442312000},{"_id":"source/tags/index.md","hash":"de7928ddeccdaa87270690567db4839419bf8a52","modified":1485442312000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1486300675000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1486300675000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1486300363000},{"_id":"themes/next/.git/index","hash":"1e2230f9750f44704a683a4480ddb1d562355250","modified":1486301038000},{"_id":"themes/next/.git/packed-refs","hash":"12ca02d8374d9a441a6c8a6c9ed061432cb0a8c9","modified":1486300675000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1486300675000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1486300675000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1486300675000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1486300675000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1486300675000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1486300675000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1486300675000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1486300675000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1486300675000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1486300675000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1486300675000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1486300675000},{"_id":"themes/next/languages/zh-CN.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1486300675000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1486300675000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1486300675000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1486300675000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1486300675000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1486300675000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1486300675000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1486300675000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1486300675000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1486300675000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1486300675000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1486300675000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1486300675000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1486300675000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1486300675000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1486300363000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1486300363000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1486300363000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1486300363000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1486300363000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1486300363000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1486300363000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1486300363000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1486300363000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1486300363000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1486300363000},{"_id":"themes/next/.git/logs/HEAD","hash":"8a04dc02e592895f871d840eb86f802a1de5b60a","modified":1486300675000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1486300675000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1486300675000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1486300675000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1486300675000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1486300675000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1486300675000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1486300675000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1486300675000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1486300675000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1486300675000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1486300675000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1486300675000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1486300675000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1486300675000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1486300675000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1486300675000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1486300675000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1486300675000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1486300675000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1486300675000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1486300675000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1486300675000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1486300675000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1486300675000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1486300675000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1486300675000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1486300675000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1486300675000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1486300675000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1486300675000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1486300675000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1486300675000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1486300675000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1486300675000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486300675000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486300675000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1486300675000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1486300675000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1486300675000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486300675000},{"_id":"themes/next/.git/refs/heads/master","hash":"2311b7302155cc3ec46e40ad16dc5c94e36328b4","modified":1486300675000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1486300675000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1486300675000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1486300675000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1486300675000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1486300675000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1486300675000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1486300675000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1486300675000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1486300675000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1486300675000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1486300675000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1486300675000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1486300675000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1486300675000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1486300675000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1486300675000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1486300675000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1486300675000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1486300675000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1486300675000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1486300675000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1486300675000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1486300675000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1486300675000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1486300675000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1486300675000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1486300675000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1486300675000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1486300675000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1486300675000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1486300675000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1486300675000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"8a04dc02e592895f871d840eb86f802a1de5b60a","modified":1486300675000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1486300675000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1486300675000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1486300675000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1486300675000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1486300675000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1486300675000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1486300675000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1486300675000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1486300675000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1486300675000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1486300675000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1486300675000},{"_id":"themes/next/.git/objects/pack/pack-b12a0e7fb1f93be4353277412b223c495989e313.idx","hash":"4ea2b7de79f1f41a895e476d2f4532bcb7cd0270","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486300675000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1486300675000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"8a04dc02e592895f871d840eb86f802a1de5b60a","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1486300675000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1486300675000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486300675000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486300675000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1486300675000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1486300675000},{"_id":"themes/next/.git/objects/pack/pack-b12a0e7fb1f93be4353277412b223c495989e313.pack","hash":"ed73ecb3db3bf78f5e01ca5007c68de73f17d1ac","modified":1486300675000},{"_id":"public/categories/index.html","hash":"57f7cae1c20878f5e4cbb0a3724d26e3512afc1d","modified":1486302696794},{"_id":"public/tags/index.html","hash":"2ecb8dfd87ce6144152bed8185b110da48affcb9","modified":1486302696794},{"_id":"public/2017/01/27/lucune初体验/index.html","hash":"2896d31ce0049b1eb13dd7f810381b4f88b117ae","modified":1486302696795},{"_id":"public/2017/01/01/2017-01-01-日志/index.html","hash":"f87eaad0e2802f884798c03b30c59b505e0dc4f3","modified":1486302696795},{"_id":"public/2016/12/25/2016-12-25-日志/index.html","hash":"d33b8e4dd28a98fa829d1ca2fb33072419949b36","modified":1486302696795},{"_id":"public/archives/index.html","hash":"540bf4d3144ab79d608d5b229d75c8d8aa46b346","modified":1486302696795},{"_id":"public/archives/2016/index.html","hash":"327203f333d8054455141c2ab6698f7fafa01f2d","modified":1486302696795},{"_id":"public/archives/2016/12/index.html","hash":"6edc87f3e02d01b07a173152b6992b03228c78aa","modified":1486302696795},{"_id":"public/archives/2017/index.html","hash":"8c9115ed80e4a51af84b367887d1c977fa9b2e42","modified":1486302696795},{"_id":"public/archives/2017/01/index.html","hash":"802f5f6a06c9092731cf0b02b69c57dc3bbf0512","modified":1486302696795},{"_id":"public/archives/2017/02/index.html","hash":"55dbf7267144ef08ab9d2f52c1ad4d94bd3ea0f5","modified":1486302696795},{"_id":"public/categories/日志/index.html","hash":"b4ad6b2daa74053db7c266f0c783dafcb1115ed8","modified":1486302696795},{"_id":"public/categories/C程序语言设计/index.html","hash":"aa1cb40491ee14c454d128d1fafcd8edc2acd319","modified":1486302696795},{"_id":"public/categories/CODE/index.html","hash":"bf0936b22e9703b181f9f41607835c9b9ffbbfbb","modified":1486302696795},{"_id":"public/categories/lucune/index.html","hash":"75ffad4d6202b2f8787dab6ce07ea126960b2b40","modified":1486302696795},{"_id":"public/categories/zjipst/index.html","hash":"bed5aa612167d813ffdd6da44e05c90c7028a354","modified":1486302696795},{"_id":"public/categories/通用技术/index.html","hash":"72e5d241bd0c7ff7f851ff986f643e19f40e7207","modified":1486302696795},{"_id":"public/tags/日志/index.html","hash":"1f5ca08568aa27a69912a529ca89d2d397405f13","modified":1486302696796},{"_id":"public/tags/C/index.html","hash":"8b56f97e08bcde814c777791c14a5189b1d033a1","modified":1486302696796},{"_id":"public/tags/阅读笔记/index.html","hash":"4553e6f8b4e827350c76ca7160c5dd5c327da36a","modified":1486302696796},{"_id":"public/tags/tomcat/index.html","hash":"d52c96b3c57684401c0f3013abfa22c6d2078321","modified":1486302696796},{"_id":"public/tags/dbcp/index.html","hash":"8ba2e22a7297fca3b859d2ff1f4215086c7d9987","modified":1486302696796},{"_id":"public/tags/全文检索/index.html","hash":"2731f9f23f7b89287210843700db184c954087a1","modified":1486302696796},{"_id":"public/tags/mac/index.html","hash":"b3cf11cac387232e24a8ffef81e91f81bae989b5","modified":1486302696796},{"_id":"public/tags/BUG/index.html","hash":"ef17513732d273d62d24748e078a57cb073bfe92","modified":1486302696796},{"_id":"public/tags/Spring/index.html","hash":"a6d6adac9c250e4a5089904ea1a5c4ae57fe4998","modified":1486302696796},{"_id":"public/tags/DynamicDataSourceRouting/index.html","hash":"02efcb744defd5764cfaba24616b9f6461d80b45","modified":1486302696796},{"_id":"public/tags/hexo/index.html","hash":"bb08bcb9c707187e285bb41a950109698b2450bb","modified":1486302696796},{"_id":"public/tags/ubuntu/index.html","hash":"38f185ec60ead2ad35866294bc57e9be6576aa84","modified":1486302696796},{"_id":"public/tags/shadowsocks/index.html","hash":"99e4abc1409e6a4fe70fc9dd8bdbab83d5e68130","modified":1486302696796},{"_id":"public/2017/02/05/C程序设计语言：第一章/index.html","hash":"94e5073627aed89580e5c5542f585f85ea207d01","modified":1486302696796},{"_id":"public/2017/01/27/mac开发环境搭建小记/index.html","hash":"8c415ef95246b31b9389d27faf163df1d0573f9c","modified":1486302696796},{"_id":"public/2017/01/24/动态数据源路由容易掉进去的坑/index.html","hash":"98519f10adda8e3ae5ed75bbd735d8be42e34f21","modified":1486302696796},{"_id":"public/2017/01/05/TOMCAT假死分析/index.html","hash":"09c7b568b3559ad26e4bb05ddaadf18f970f235b","modified":1486302696796},{"_id":"public/2016/12/27/2016-12-27-日志/index.html","hash":"814ead4c71e9de301d5d0169c6c8521231202d35","modified":1486302696796},{"_id":"public/2016/12/26/博客环境搭建/index.html","hash":"da0ea19eeff034fe723ee4b93ee445945edc76e3","modified":1486302696796},{"_id":"public/2016/12/26/2016-12-26-日志/index.html","hash":"01d097614fce3d5c08f40d549256348a288d4d42","modified":1486302696796},{"_id":"public/index.html","hash":"2184aea9aade8efea9d4bd605ddb09c002cf1237","modified":1486302696796},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1486302696810},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1486302696810},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1486302696810},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1486302696810},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1486302696810},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1486302696810},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1486302696810},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1486302696810},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1486302696810},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486302696810},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486302696811},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1486302696811},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1486302696811},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1486302696811},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1486302696811},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1486302696811},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486302696811},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486302696811},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486302696811},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486302696811},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486302696811},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486302696811},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1486302696811},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486302696811},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486302697554},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486302697558},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486302697562},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486302697563},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1486302697569},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1486302697569},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1486302697569},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1486302697569},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1486302697569},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1486302697569},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1486302697569},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1486302697569},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1486302697569},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1486302697569},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1486302697569},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1486302697569},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1486302697570},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1486302697570},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1486302697570},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1486302697570},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1486302697570},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1486302697570},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1486302697570},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1486302697570},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1486302697570},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1486302697570},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1486302697570},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1486302697570},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1486302697570},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486302697570},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1486302697570},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486302697571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1486302697571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1486302697571},{"_id":"public/css/main.css","hash":"30b180b791d21b8abf18198873c1b59489706c05","modified":1486302697571},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1486302697571},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1486302697571},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1486302697571},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1486302697571},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1486302697571},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1486302697571},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1486302697571},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1486302697571},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1486302697571},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1486302697571},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486302697571},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1486302697583}],"Category":[{"name":"日志","_id":"ciysq8ym30003h0tavt9hk72u"},{"name":"C程序语言设计","_id":"ciysq8ymx000lh0tagh7ot9bx"},{"name":"CODE","_id":"ciysq8yn1000qh0tauwt7bakf"},{"name":"lucune","_id":"ciysq8yn4000uh0tao7kvy2bo"},{"name":"zjipst","_id":"ciysq8yn6000yh0ta61zfq6ax"},{"name":"通用技术","_id":"ciysq8yn80012h0ta7wqpvxiq"}],"Data":[],"Page":[{"title":"categories","date":"2017-01-23T02:42:52.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-01-23 10:42:52\ntype: \"categories\"\n---\n","updated":"2017-01-26T14:51:52.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ciysq8ylk0001h0tanmieszb8","content":"","excerpt":"","more":""},{"title":"Tagcloud","date":"2017-01-23T02:40:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ndate: 2017-01-23 10:40:42\ntype: \"tags\"\n---\n","updated":"2017-01-26T14:51:52.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciysq8yur001nh0tanr4jc527","content":"","excerpt":"","more":""}],"Post":[{"title":"2016-12-25 日志","date":"2016-12-25T14:27:16.000Z","_content":"\n折腾了一天hexo+github,总算把大致的开发框架弄好了，以后大概能按照这个模式写博客了。\n唯一有点麻烦的就是需要在vm+ubuntu的环境下进行md文件的编写和编译，有点麻烦，考虑以后用ssh+脚本自动化编译的模式，这样就能在windows环境下直接写博客了。\n虽说在Ubuntu下写也不是不行，但是总觉得VM很卡。\n是不是计算机内存不够呢？毕竟只有8G，但是看了Windows的资源管理器，发现CPU和内存使用情况都很健康，那为什么切换到VM下的Ubuntu就会这么卡呢？\n说了一堆无聊的废话，sign。\n今天除了吃早餐都没出门，中午和晚餐分别吃的羊排和小龙虾，感觉特不好，又贵又难吃；而且还很腻。\n写到这里发现用的都是纯文本，MD的格式化字符都忘得一干二净，写完这篇文章后一定要回头看看语法。\n用了两天的华为P9，感觉还可以，但是没有我想象中那么惊艳。系统偶尔有点卡，当然这也可能是我的幻觉而已。最让我满意的是指纹解锁，不用每次都去输入解锁密码，很是方便。\n但缺点也很多，比如换个字体还要钱，真是想钱想疯了，菊花为就这么缺钱？\n另外本来想这两天去科技图书馆逛逛的，结果下雨了，未能成行。而且天气也开始变得很冷，明明是10℃，却冷的和零下一样，真是奇怪。\n对了，md文件怎么插入图片呢？单一的文本还是有点难看啊。\n以后要在这里多写点技术文章，充实一下自己。另外还要开始写读书笔记了，看了那么多书，如果不写点东西记录一下，简直和没看一样。\n曾经的我可是文艺青年。\n就写到这里吧。\n毕竟只是我的测试文章。\n看看编译以后怎么样。\n\n","source":"_posts/2016-12-25-日志.md","raw":"---\ntitle: 2016-12-25 日志\ndate: 2016-12-25 22:27:16\ntags:\ncategory:\n- 日志\n---\n\n折腾了一天hexo+github,总算把大致的开发框架弄好了，以后大概能按照这个模式写博客了。\n唯一有点麻烦的就是需要在vm+ubuntu的环境下进行md文件的编写和编译，有点麻烦，考虑以后用ssh+脚本自动化编译的模式，这样就能在windows环境下直接写博客了。\n虽说在Ubuntu下写也不是不行，但是总觉得VM很卡。\n是不是计算机内存不够呢？毕竟只有8G，但是看了Windows的资源管理器，发现CPU和内存使用情况都很健康，那为什么切换到VM下的Ubuntu就会这么卡呢？\n说了一堆无聊的废话，sign。\n今天除了吃早餐都没出门，中午和晚餐分别吃的羊排和小龙虾，感觉特不好，又贵又难吃；而且还很腻。\n写到这里发现用的都是纯文本，MD的格式化字符都忘得一干二净，写完这篇文章后一定要回头看看语法。\n用了两天的华为P9，感觉还可以，但是没有我想象中那么惊艳。系统偶尔有点卡，当然这也可能是我的幻觉而已。最让我满意的是指纹解锁，不用每次都去输入解锁密码，很是方便。\n但缺点也很多，比如换个字体还要钱，真是想钱想疯了，菊花为就这么缺钱？\n另外本来想这两天去科技图书馆逛逛的，结果下雨了，未能成行。而且天气也开始变得很冷，明明是10℃，却冷的和零下一样，真是奇怪。\n对了，md文件怎么插入图片呢？单一的文本还是有点难看啊。\n以后要在这里多写点技术文章，充实一下自己。另外还要开始写读书笔记了，看了那么多书，如果不写点东西记录一下，简直和没看一样。\n曾经的我可是文艺青年。\n就写到这里吧。\n毕竟只是我的测试文章。\n看看编译以后怎么样。\n\n","slug":"2016-12-25-日志","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ylf0000h0taifc6ewxe","content":"<p>折腾了一天hexo+github,总算把大致的开发框架弄好了，以后大概能按照这个模式写博客了。<br>唯一有点麻烦的就是需要在vm+ubuntu的环境下进行md文件的编写和编译，有点麻烦，考虑以后用ssh+脚本自动化编译的模式，这样就能在windows环境下直接写博客了。<br>虽说在Ubuntu下写也不是不行，但是总觉得VM很卡。<br>是不是计算机内存不够呢？毕竟只有8G，但是看了Windows的资源管理器，发现CPU和内存使用情况都很健康，那为什么切换到VM下的Ubuntu就会这么卡呢？<br>说了一堆无聊的废话，sign。<br>今天除了吃早餐都没出门，中午和晚餐分别吃的羊排和小龙虾，感觉特不好，又贵又难吃；而且还很腻。<br>写到这里发现用的都是纯文本，MD的格式化字符都忘得一干二净，写完这篇文章后一定要回头看看语法。<br>用了两天的华为P9，感觉还可以，但是没有我想象中那么惊艳。系统偶尔有点卡，当然这也可能是我的幻觉而已。最让我满意的是指纹解锁，不用每次都去输入解锁密码，很是方便。<br>但缺点也很多，比如换个字体还要钱，真是想钱想疯了，菊花为就这么缺钱？<br>另外本来想这两天去科技图书馆逛逛的，结果下雨了，未能成行。而且天气也开始变得很冷，明明是10℃，却冷的和零下一样，真是奇怪。<br>对了，md文件怎么插入图片呢？单一的文本还是有点难看啊。<br>以后要在这里多写点技术文章，充实一下自己。另外还要开始写读书笔记了，看了那么多书，如果不写点东西记录一下，简直和没看一样。<br>曾经的我可是文艺青年。<br>就写到这里吧。<br>毕竟只是我的测试文章。<br>看看编译以后怎么样。</p>\n","excerpt":"","more":"<p>折腾了一天hexo+github,总算把大致的开发框架弄好了，以后大概能按照这个模式写博客了。<br>唯一有点麻烦的就是需要在vm+ubuntu的环境下进行md文件的编写和编译，有点麻烦，考虑以后用ssh+脚本自动化编译的模式，这样就能在windows环境下直接写博客了。<br>虽说在Ubuntu下写也不是不行，但是总觉得VM很卡。<br>是不是计算机内存不够呢？毕竟只有8G，但是看了Windows的资源管理器，发现CPU和内存使用情况都很健康，那为什么切换到VM下的Ubuntu就会这么卡呢？<br>说了一堆无聊的废话，sign。<br>今天除了吃早餐都没出门，中午和晚餐分别吃的羊排和小龙虾，感觉特不好，又贵又难吃；而且还很腻。<br>写到这里发现用的都是纯文本，MD的格式化字符都忘得一干二净，写完这篇文章后一定要回头看看语法。<br>用了两天的华为P9，感觉还可以，但是没有我想象中那么惊艳。系统偶尔有点卡，当然这也可能是我的幻觉而已。最让我满意的是指纹解锁，不用每次都去输入解锁密码，很是方便。<br>但缺点也很多，比如换个字体还要钱，真是想钱想疯了，菊花为就这么缺钱？<br>另外本来想这两天去科技图书馆逛逛的，结果下雨了，未能成行。而且天气也开始变得很冷，明明是10℃，却冷的和零下一样，真是奇怪。<br>对了，md文件怎么插入图片呢？单一的文本还是有点难看啊。<br>以后要在这里多写点技术文章，充实一下自己。另外还要开始写读书笔记了，看了那么多书，如果不写点东西记录一下，简直和没看一样。<br>曾经的我可是文艺青年。<br>就写到这里吧。<br>毕竟只是我的测试文章。<br>看看编译以后怎么样。</p>\n"},{"title":"2016-12-26 日志","date":"2016-12-26T10:45:52.000Z","_content":"今天的状态很不好。暖气吹得我头疼。\n项目定位服务出了问题，一看日志发现上次写的代码有问题，没有切换到地市。真是无语，当一个人的注意力被另一件事物吸引，很容易忘记之前在做的事情。引以为戒吧。\n\n不过这次的问题和我的代码实际上没有任何关联，因为我加了防御措施，当账号密码不正确时会自动切换到之前在用的通用账号密码。所以这次出现的状况是第三方的服务商的锅，与公司无关。\n根据已有的资料来看，问题不在于内外网交互，而在于外网侧到电信运营商之间的这条通路出现了问题。而根据那家公司的实施说，电信在昨天就发现该第三方公司到电信的请求数突然变为0了。\n大胆猜测一下，有这样几种可能：\n+ 电信本身挂了。可能性不大。\n+ 电信提供给第三方公司的账号密码过期了，或者是域名变更等等。总的来说就是两家公司的服务都没有出现问题，而关键在于沟通的不协调。这种可能性不大。\n+ 第三方公司挂了。\n\n然而以上三种情况实际上都不太可能发生，因为这个定位服务实际上已经稳定运行了将近三年，应该没人会来改动代码或者配置。\n转换一下立场，站在第三方公司的角度来看，他也应该是根据内网交互出来的请求数据，向电信公司发出定位请求。而这个请求实际上没有到电信，他那边抛Socket time out异常。\n那么什么情况下会出现这种请求无法到达的情况呢？\n假设两者同处于互联网，那么这种情况是难以想象的，除非请求方式并非简单的HTTP请求。\n\n想半天也想不明白究竟是何种原因会导致如此奇妙的状况，继续跟踪吧，希望明天能修复好。毕竟直接面对用户的是我们。\n\n剩下的也没什么好说的，就是感觉到心情有些不好，看待事物的方式又开始变得很悲观。\n这样一样就感觉到自己是一个相当脆弱的人，而又考虑到这点的我变得更加对未来不抱希望了。\n真是一个恶性循环。\n其实产生这种情绪的原因不仅仅是自身的原因，或者说直接原因不仅仅是因为我的性格问题。也许还和我的社交关系太过单一有关，另外我的兴趣爱好也实在乏善可陈。\n前者，大概是因为我对“朋友”这一概念太过执着，对于这一标准太过严格，以至于有生以来也没有多少人能符合我对于这一概念的标准。\n举个例子来说，上周夜跑，跑到江边的塑胶跑道时，遇见了一个高中同学。这实在是很稀罕的事，那时我没戴眼镜，是他叫住的我。他一边看着我，一边回忆着我的名字。\n“哎，你看起来有点眼熟啊，是东中的吗？”\n这几年人的外貌变化还是有点大，虽然第一时间我没认出他来，不过潜意识里已经叫出了他的名字。\n看来我的记忆力实在不错，然而我们之间并不怎么熟，无非是高一那一年里是室友，但没怎么搭话。\n寒暄几句之后我开始了跑步。在那之后说是要联系，实际上我也没有丝毫动力。毕竟我怀疑到最后他也没想起我是谁，尽管我报了自己的名字。\n说到高中，至少在第一年，是最为难受的一年，没有朋友，因为那时候我有点目中无人。\n不过目中无人也是有理由的，因为那些家伙实在教我鄙视。我就没遇到过一个在品德上稍微无可指摘的家伙。\n后两年状况倒是好了一些，大概是因为我成绩好，不怎么用功就能排名前列吧。总是有人来向我请教问题，我总是一一解答，没有丝毫不耐。\n这其实对于一般人来说是不正常的，频繁来问我的大概有6-7人，正常人早就不耐烦，甚至破口大骂的，然而我基本上没什么特殊的情绪。\n一方面可能是因为在那段时间里，我极度渴望和其他人交流的缘故吧。\n然而总有人带着有色眼镜来看待我的行为，比如对某某有兴趣啦，喜欢上某某啦。甚至还有一个女生的闺蜜直截了当的当面对我，“你是不是喜欢XX？放弃吧，她对你不会产生兴趣的。”当时我的想法是惊愕，反问她为什么会这么想，而后我也没在意她说了什么，继续去看我的书了。然而后来一想，才发现莫名其妙被人看低了。\n这样一想，我后来也无非是带着小丑的面具与人交往而已，心想着与人为善就能过得好，然而其实并不会。其他人总是会觉得你这善心有些可疑，继而捏造出一个龌蹉的缘由，然后心安理得地践踏你的善行。仅此而已。\n然而想到这里，我的潜意识又会为了他们开脱。其中的一条理由便是：人的记忆是不可靠的。人总是看到自己想看到的，记住自己想记住的。所以我揣测的那些证据无非是我悲观情绪下变形了的记忆，实际情况并非是那样。\n\n这种说法实际上也有些道理，我无法反驳。然而如果有人问我高中那会儿是否有什么要好的朋友，我的脑海只会是一片空白。\n\n既然如此，再回忆一下大学生活吧。那四年来说，唯一的情感大概就是陌生的惶恐。\n感觉自己不属于这里，无法融入任何一个集体。无法专心于任何事，唯一幸福的时刻就是在图书馆抱着本书度过一个一个充满阳光的下午。这四年的社交生活甚至比高中还要压抑。高中时至少还有频繁的交流，那时候的社交大概具有某种强制性，然而一到了大学，我失去了与人交往的理由，于是便不在对人感兴趣，甚至对生活本身失去了兴趣。\n那时候对抗抑郁侵蚀的唯一方法就是晚上出去跑步，从寝室出发，一直沿着启真湖跑。\n那段漫长的生活教会了我一个道理，实际上抑郁不过是内啡肽过低而已。一切的情绪低落都可以用慢跑来解决。\n\n然而现在还是无聊，还是没有找到活着的信念和追求，真是遗憾。\n","source":"_posts/2016-12-26-日志.md","raw":"---\ntitle: 2016-12-26 日志\ndate: 2016-12-26 18:45:52\ntags:\n- 日志\ncategory:\n- 日志\n---\n今天的状态很不好。暖气吹得我头疼。\n项目定位服务出了问题，一看日志发现上次写的代码有问题，没有切换到地市。真是无语，当一个人的注意力被另一件事物吸引，很容易忘记之前在做的事情。引以为戒吧。\n\n不过这次的问题和我的代码实际上没有任何关联，因为我加了防御措施，当账号密码不正确时会自动切换到之前在用的通用账号密码。所以这次出现的状况是第三方的服务商的锅，与公司无关。\n根据已有的资料来看，问题不在于内外网交互，而在于外网侧到电信运营商之间的这条通路出现了问题。而根据那家公司的实施说，电信在昨天就发现该第三方公司到电信的请求数突然变为0了。\n大胆猜测一下，有这样几种可能：\n+ 电信本身挂了。可能性不大。\n+ 电信提供给第三方公司的账号密码过期了，或者是域名变更等等。总的来说就是两家公司的服务都没有出现问题，而关键在于沟通的不协调。这种可能性不大。\n+ 第三方公司挂了。\n\n然而以上三种情况实际上都不太可能发生，因为这个定位服务实际上已经稳定运行了将近三年，应该没人会来改动代码或者配置。\n转换一下立场，站在第三方公司的角度来看，他也应该是根据内网交互出来的请求数据，向电信公司发出定位请求。而这个请求实际上没有到电信，他那边抛Socket time out异常。\n那么什么情况下会出现这种请求无法到达的情况呢？\n假设两者同处于互联网，那么这种情况是难以想象的，除非请求方式并非简单的HTTP请求。\n\n想半天也想不明白究竟是何种原因会导致如此奇妙的状况，继续跟踪吧，希望明天能修复好。毕竟直接面对用户的是我们。\n\n剩下的也没什么好说的，就是感觉到心情有些不好，看待事物的方式又开始变得很悲观。\n这样一样就感觉到自己是一个相当脆弱的人，而又考虑到这点的我变得更加对未来不抱希望了。\n真是一个恶性循环。\n其实产生这种情绪的原因不仅仅是自身的原因，或者说直接原因不仅仅是因为我的性格问题。也许还和我的社交关系太过单一有关，另外我的兴趣爱好也实在乏善可陈。\n前者，大概是因为我对“朋友”这一概念太过执着，对于这一标准太过严格，以至于有生以来也没有多少人能符合我对于这一概念的标准。\n举个例子来说，上周夜跑，跑到江边的塑胶跑道时，遇见了一个高中同学。这实在是很稀罕的事，那时我没戴眼镜，是他叫住的我。他一边看着我，一边回忆着我的名字。\n“哎，你看起来有点眼熟啊，是东中的吗？”\n这几年人的外貌变化还是有点大，虽然第一时间我没认出他来，不过潜意识里已经叫出了他的名字。\n看来我的记忆力实在不错，然而我们之间并不怎么熟，无非是高一那一年里是室友，但没怎么搭话。\n寒暄几句之后我开始了跑步。在那之后说是要联系，实际上我也没有丝毫动力。毕竟我怀疑到最后他也没想起我是谁，尽管我报了自己的名字。\n说到高中，至少在第一年，是最为难受的一年，没有朋友，因为那时候我有点目中无人。\n不过目中无人也是有理由的，因为那些家伙实在教我鄙视。我就没遇到过一个在品德上稍微无可指摘的家伙。\n后两年状况倒是好了一些，大概是因为我成绩好，不怎么用功就能排名前列吧。总是有人来向我请教问题，我总是一一解答，没有丝毫不耐。\n这其实对于一般人来说是不正常的，频繁来问我的大概有6-7人，正常人早就不耐烦，甚至破口大骂的，然而我基本上没什么特殊的情绪。\n一方面可能是因为在那段时间里，我极度渴望和其他人交流的缘故吧。\n然而总有人带着有色眼镜来看待我的行为，比如对某某有兴趣啦，喜欢上某某啦。甚至还有一个女生的闺蜜直截了当的当面对我，“你是不是喜欢XX？放弃吧，她对你不会产生兴趣的。”当时我的想法是惊愕，反问她为什么会这么想，而后我也没在意她说了什么，继续去看我的书了。然而后来一想，才发现莫名其妙被人看低了。\n这样一想，我后来也无非是带着小丑的面具与人交往而已，心想着与人为善就能过得好，然而其实并不会。其他人总是会觉得你这善心有些可疑，继而捏造出一个龌蹉的缘由，然后心安理得地践踏你的善行。仅此而已。\n然而想到这里，我的潜意识又会为了他们开脱。其中的一条理由便是：人的记忆是不可靠的。人总是看到自己想看到的，记住自己想记住的。所以我揣测的那些证据无非是我悲观情绪下变形了的记忆，实际情况并非是那样。\n\n这种说法实际上也有些道理，我无法反驳。然而如果有人问我高中那会儿是否有什么要好的朋友，我的脑海只会是一片空白。\n\n既然如此，再回忆一下大学生活吧。那四年来说，唯一的情感大概就是陌生的惶恐。\n感觉自己不属于这里，无法融入任何一个集体。无法专心于任何事，唯一幸福的时刻就是在图书馆抱着本书度过一个一个充满阳光的下午。这四年的社交生活甚至比高中还要压抑。高中时至少还有频繁的交流，那时候的社交大概具有某种强制性，然而一到了大学，我失去了与人交往的理由，于是便不在对人感兴趣，甚至对生活本身失去了兴趣。\n那时候对抗抑郁侵蚀的唯一方法就是晚上出去跑步，从寝室出发，一直沿着启真湖跑。\n那段漫长的生活教会了我一个道理，实际上抑郁不过是内啡肽过低而已。一切的情绪低落都可以用慢跑来解决。\n\n然而现在还是无聊，还是没有找到活着的信念和追求，真是遗憾。\n","slug":"2016-12-26-日志","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ylz0002h0tat7m19t07","content":"<p>今天的状态很不好。暖气吹得我头疼。<br>项目定位服务出了问题，一看日志发现上次写的代码有问题，没有切换到地市。真是无语，当一个人的注意力被另一件事物吸引，很容易忘记之前在做的事情。引以为戒吧。</p>\n<p>不过这次的问题和我的代码实际上没有任何关联，因为我加了防御措施，当账号密码不正确时会自动切换到之前在用的通用账号密码。所以这次出现的状况是第三方的服务商的锅，与公司无关。<br>根据已有的资料来看，问题不在于内外网交互，而在于外网侧到电信运营商之间的这条通路出现了问题。而根据那家公司的实施说，电信在昨天就发现该第三方公司到电信的请求数突然变为0了。<br>大胆猜测一下，有这样几种可能：</p>\n<ul>\n<li>电信本身挂了。可能性不大。</li>\n<li>电信提供给第三方公司的账号密码过期了，或者是域名变更等等。总的来说就是两家公司的服务都没有出现问题，而关键在于沟通的不协调。这种可能性不大。</li>\n<li>第三方公司挂了。</li>\n</ul>\n<p>然而以上三种情况实际上都不太可能发生，因为这个定位服务实际上已经稳定运行了将近三年，应该没人会来改动代码或者配置。<br>转换一下立场，站在第三方公司的角度来看，他也应该是根据内网交互出来的请求数据，向电信公司发出定位请求。而这个请求实际上没有到电信，他那边抛Socket time out异常。<br>那么什么情况下会出现这种请求无法到达的情况呢？<br>假设两者同处于互联网，那么这种情况是难以想象的，除非请求方式并非简单的HTTP请求。</p>\n<p>想半天也想不明白究竟是何种原因会导致如此奇妙的状况，继续跟踪吧，希望明天能修复好。毕竟直接面对用户的是我们。</p>\n<p>剩下的也没什么好说的，就是感觉到心情有些不好，看待事物的方式又开始变得很悲观。<br>这样一样就感觉到自己是一个相当脆弱的人，而又考虑到这点的我变得更加对未来不抱希望了。<br>真是一个恶性循环。<br>其实产生这种情绪的原因不仅仅是自身的原因，或者说直接原因不仅仅是因为我的性格问题。也许还和我的社交关系太过单一有关，另外我的兴趣爱好也实在乏善可陈。<br>前者，大概是因为我对“朋友”这一概念太过执着，对于这一标准太过严格，以至于有生以来也没有多少人能符合我对于这一概念的标准。<br>举个例子来说，上周夜跑，跑到江边的塑胶跑道时，遇见了一个高中同学。这实在是很稀罕的事，那时我没戴眼镜，是他叫住的我。他一边看着我，一边回忆着我的名字。<br>“哎，你看起来有点眼熟啊，是东中的吗？”<br>这几年人的外貌变化还是有点大，虽然第一时间我没认出他来，不过潜意识里已经叫出了他的名字。<br>看来我的记忆力实在不错，然而我们之间并不怎么熟，无非是高一那一年里是室友，但没怎么搭话。<br>寒暄几句之后我开始了跑步。在那之后说是要联系，实际上我也没有丝毫动力。毕竟我怀疑到最后他也没想起我是谁，尽管我报了自己的名字。<br>说到高中，至少在第一年，是最为难受的一年，没有朋友，因为那时候我有点目中无人。<br>不过目中无人也是有理由的，因为那些家伙实在教我鄙视。我就没遇到过一个在品德上稍微无可指摘的家伙。<br>后两年状况倒是好了一些，大概是因为我成绩好，不怎么用功就能排名前列吧。总是有人来向我请教问题，我总是一一解答，没有丝毫不耐。<br>这其实对于一般人来说是不正常的，频繁来问我的大概有6-7人，正常人早就不耐烦，甚至破口大骂的，然而我基本上没什么特殊的情绪。<br>一方面可能是因为在那段时间里，我极度渴望和其他人交流的缘故吧。<br>然而总有人带着有色眼镜来看待我的行为，比如对某某有兴趣啦，喜欢上某某啦。甚至还有一个女生的闺蜜直截了当的当面对我，“你是不是喜欢XX？放弃吧，她对你不会产生兴趣的。”当时我的想法是惊愕，反问她为什么会这么想，而后我也没在意她说了什么，继续去看我的书了。然而后来一想，才发现莫名其妙被人看低了。<br>这样一想，我后来也无非是带着小丑的面具与人交往而已，心想着与人为善就能过得好，然而其实并不会。其他人总是会觉得你这善心有些可疑，继而捏造出一个龌蹉的缘由，然后心安理得地践踏你的善行。仅此而已。<br>然而想到这里，我的潜意识又会为了他们开脱。其中的一条理由便是：人的记忆是不可靠的。人总是看到自己想看到的，记住自己想记住的。所以我揣测的那些证据无非是我悲观情绪下变形了的记忆，实际情况并非是那样。</p>\n<p>这种说法实际上也有些道理，我无法反驳。然而如果有人问我高中那会儿是否有什么要好的朋友，我的脑海只会是一片空白。</p>\n<p>既然如此，再回忆一下大学生活吧。那四年来说，唯一的情感大概就是陌生的惶恐。<br>感觉自己不属于这里，无法融入任何一个集体。无法专心于任何事，唯一幸福的时刻就是在图书馆抱着本书度过一个一个充满阳光的下午。这四年的社交生活甚至比高中还要压抑。高中时至少还有频繁的交流，那时候的社交大概具有某种强制性，然而一到了大学，我失去了与人交往的理由，于是便不在对人感兴趣，甚至对生活本身失去了兴趣。<br>那时候对抗抑郁侵蚀的唯一方法就是晚上出去跑步，从寝室出发，一直沿着启真湖跑。<br>那段漫长的生活教会了我一个道理，实际上抑郁不过是内啡肽过低而已。一切的情绪低落都可以用慢跑来解决。</p>\n<p>然而现在还是无聊，还是没有找到活着的信念和追求，真是遗憾。</p>\n","excerpt":"","more":"<p>今天的状态很不好。暖气吹得我头疼。<br>项目定位服务出了问题，一看日志发现上次写的代码有问题，没有切换到地市。真是无语，当一个人的注意力被另一件事物吸引，很容易忘记之前在做的事情。引以为戒吧。</p>\n<p>不过这次的问题和我的代码实际上没有任何关联，因为我加了防御措施，当账号密码不正确时会自动切换到之前在用的通用账号密码。所以这次出现的状况是第三方的服务商的锅，与公司无关。<br>根据已有的资料来看，问题不在于内外网交互，而在于外网侧到电信运营商之间的这条通路出现了问题。而根据那家公司的实施说，电信在昨天就发现该第三方公司到电信的请求数突然变为0了。<br>大胆猜测一下，有这样几种可能：</p>\n<ul>\n<li>电信本身挂了。可能性不大。</li>\n<li>电信提供给第三方公司的账号密码过期了，或者是域名变更等等。总的来说就是两家公司的服务都没有出现问题，而关键在于沟通的不协调。这种可能性不大。</li>\n<li>第三方公司挂了。</li>\n</ul>\n<p>然而以上三种情况实际上都不太可能发生，因为这个定位服务实际上已经稳定运行了将近三年，应该没人会来改动代码或者配置。<br>转换一下立场，站在第三方公司的角度来看，他也应该是根据内网交互出来的请求数据，向电信公司发出定位请求。而这个请求实际上没有到电信，他那边抛Socket time out异常。<br>那么什么情况下会出现这种请求无法到达的情况呢？<br>假设两者同处于互联网，那么这种情况是难以想象的，除非请求方式并非简单的HTTP请求。</p>\n<p>想半天也想不明白究竟是何种原因会导致如此奇妙的状况，继续跟踪吧，希望明天能修复好。毕竟直接面对用户的是我们。</p>\n<p>剩下的也没什么好说的，就是感觉到心情有些不好，看待事物的方式又开始变得很悲观。<br>这样一样就感觉到自己是一个相当脆弱的人，而又考虑到这点的我变得更加对未来不抱希望了。<br>真是一个恶性循环。<br>其实产生这种情绪的原因不仅仅是自身的原因，或者说直接原因不仅仅是因为我的性格问题。也许还和我的社交关系太过单一有关，另外我的兴趣爱好也实在乏善可陈。<br>前者，大概是因为我对“朋友”这一概念太过执着，对于这一标准太过严格，以至于有生以来也没有多少人能符合我对于这一概念的标准。<br>举个例子来说，上周夜跑，跑到江边的塑胶跑道时，遇见了一个高中同学。这实在是很稀罕的事，那时我没戴眼镜，是他叫住的我。他一边看着我，一边回忆着我的名字。<br>“哎，你看起来有点眼熟啊，是东中的吗？”<br>这几年人的外貌变化还是有点大，虽然第一时间我没认出他来，不过潜意识里已经叫出了他的名字。<br>看来我的记忆力实在不错，然而我们之间并不怎么熟，无非是高一那一年里是室友，但没怎么搭话。<br>寒暄几句之后我开始了跑步。在那之后说是要联系，实际上我也没有丝毫动力。毕竟我怀疑到最后他也没想起我是谁，尽管我报了自己的名字。<br>说到高中，至少在第一年，是最为难受的一年，没有朋友，因为那时候我有点目中无人。<br>不过目中无人也是有理由的，因为那些家伙实在教我鄙视。我就没遇到过一个在品德上稍微无可指摘的家伙。<br>后两年状况倒是好了一些，大概是因为我成绩好，不怎么用功就能排名前列吧。总是有人来向我请教问题，我总是一一解答，没有丝毫不耐。<br>这其实对于一般人来说是不正常的，频繁来问我的大概有6-7人，正常人早就不耐烦，甚至破口大骂的，然而我基本上没什么特殊的情绪。<br>一方面可能是因为在那段时间里，我极度渴望和其他人交流的缘故吧。<br>然而总有人带着有色眼镜来看待我的行为，比如对某某有兴趣啦，喜欢上某某啦。甚至还有一个女生的闺蜜直截了当的当面对我，“你是不是喜欢XX？放弃吧，她对你不会产生兴趣的。”当时我的想法是惊愕，反问她为什么会这么想，而后我也没在意她说了什么，继续去看我的书了。然而后来一想，才发现莫名其妙被人看低了。<br>这样一想，我后来也无非是带着小丑的面具与人交往而已，心想着与人为善就能过得好，然而其实并不会。其他人总是会觉得你这善心有些可疑，继而捏造出一个龌蹉的缘由，然后心安理得地践踏你的善行。仅此而已。<br>然而想到这里，我的潜意识又会为了他们开脱。其中的一条理由便是：人的记忆是不可靠的。人总是看到自己想看到的，记住自己想记住的。所以我揣测的那些证据无非是我悲观情绪下变形了的记忆，实际情况并非是那样。</p>\n<p>这种说法实际上也有些道理，我无法反驳。然而如果有人问我高中那会儿是否有什么要好的朋友，我的脑海只会是一片空白。</p>\n<p>既然如此，再回忆一下大学生活吧。那四年来说，唯一的情感大概就是陌生的惶恐。<br>感觉自己不属于这里，无法融入任何一个集体。无法专心于任何事，唯一幸福的时刻就是在图书馆抱着本书度过一个一个充满阳光的下午。这四年的社交生活甚至比高中还要压抑。高中时至少还有频繁的交流，那时候的社交大概具有某种强制性，然而一到了大学，我失去了与人交往的理由，于是便不在对人感兴趣，甚至对生活本身失去了兴趣。<br>那时候对抗抑郁侵蚀的唯一方法就是晚上出去跑步，从寝室出发，一直沿着启真湖跑。<br>那段漫长的生活教会了我一个道理，实际上抑郁不过是内啡肽过低而已。一切的情绪低落都可以用慢跑来解决。</p>\n<p>然而现在还是无聊，还是没有找到活着的信念和追求，真是遗憾。</p>\n"},{"title":"2016-12-27 日志","date":"2016-12-27T11:59:07.000Z","_content":"感觉自己真是脆弱。\n何时能变得心灵强大起来呢？为什经历一点点的挫折就开始怀疑起周围的一切呢？\n果然我需要佛学的慰藉，不断磨砺心性，以便自己能够豁达地面对各种遭遇吧。\n\n电信定位的问题解决了，然而并没有问什么原因，这可能会成为不解之谜了。\n\n感觉工作效率低，总是忍不住去浏览一些新的技术，老是妄想自己以后有技术了会多么多么富有；然而却做的很少。\n比如想要写一个秒级的端口扫描器，基于python实现；一开始定的方案是协程+asyncio框架，然而后者看了半天依旧费解。光是一个yeild就让我寻思半天依旧不得其门而入。\n\n而且感觉最近几天身体状况都不太好，因为天气原因好几天没去跑步了。\n内啡肽不够，整个人又开始变得很悲观。\n书什么的也都看不进去，翻了一半的安娜卡列尼娜好久都没动了。\n对未来不报希望，不知道将来的生活有何值得期待之处。\n真是令人伤感。\n\n杭州的天气开始变得很冷很冷，晚上就算穿着两条裤子都觉得关节有点疼。空调开不了制暖，感觉这个冬天不好过。\n明年争取多赚点钱，然后租一个小套间，能做饭的那种，然后再谈一个女朋友；这样我的生活就能慢慢步入正规。\n感觉我的问题就是缺乏自信。\n当然也可能不完全对，我最缺乏的是活着的欲望，感觉一直都是随遇而安，并没有主动地想要去追求什么东西。这大概是童年的挫折养成的一种“习得性无助”吧。\n从现在开始，改变自己。\n\n说的倒是容易，改变自己。\n世间最为困难的莫过于此。\n我想起异域的那句名言：\n> what can change the nature of a man?\n\n衰老而臃肿的解谜者彷徨在贫民巷，等待着无名者一次又一次的到来，而每次造访，后者——她的爱人，身上的伤痕越来越多，并且失去的记忆也越来越多。\n最终，她所期待的只是解脱而已。\n\n愈发感觉异域的世界观和故事情节很和我的胃口，然而那庞大的文字量和游戏时间已经让我无法再次完成体会。\n或许再过一段时间，我能静下心来，去再次体会那孤独、绝望最后却伴随救赎的史诗吧。\n\n我期待着那一天。\n","source":"_posts/2016-12-27-日志.md","raw":"---\ntitle: 2016-12-27 日志\ndate: 2016-12-27 19:59:07\ntags:\n- 日志\ncategory:\n- 日志\n---\n感觉自己真是脆弱。\n何时能变得心灵强大起来呢？为什经历一点点的挫折就开始怀疑起周围的一切呢？\n果然我需要佛学的慰藉，不断磨砺心性，以便自己能够豁达地面对各种遭遇吧。\n\n电信定位的问题解决了，然而并没有问什么原因，这可能会成为不解之谜了。\n\n感觉工作效率低，总是忍不住去浏览一些新的技术，老是妄想自己以后有技术了会多么多么富有；然而却做的很少。\n比如想要写一个秒级的端口扫描器，基于python实现；一开始定的方案是协程+asyncio框架，然而后者看了半天依旧费解。光是一个yeild就让我寻思半天依旧不得其门而入。\n\n而且感觉最近几天身体状况都不太好，因为天气原因好几天没去跑步了。\n内啡肽不够，整个人又开始变得很悲观。\n书什么的也都看不进去，翻了一半的安娜卡列尼娜好久都没动了。\n对未来不报希望，不知道将来的生活有何值得期待之处。\n真是令人伤感。\n\n杭州的天气开始变得很冷很冷，晚上就算穿着两条裤子都觉得关节有点疼。空调开不了制暖，感觉这个冬天不好过。\n明年争取多赚点钱，然后租一个小套间，能做饭的那种，然后再谈一个女朋友；这样我的生活就能慢慢步入正规。\n感觉我的问题就是缺乏自信。\n当然也可能不完全对，我最缺乏的是活着的欲望，感觉一直都是随遇而安，并没有主动地想要去追求什么东西。这大概是童年的挫折养成的一种“习得性无助”吧。\n从现在开始，改变自己。\n\n说的倒是容易，改变自己。\n世间最为困难的莫过于此。\n我想起异域的那句名言：\n> what can change the nature of a man?\n\n衰老而臃肿的解谜者彷徨在贫民巷，等待着无名者一次又一次的到来，而每次造访，后者——她的爱人，身上的伤痕越来越多，并且失去的记忆也越来越多。\n最终，她所期待的只是解脱而已。\n\n愈发感觉异域的世界观和故事情节很和我的胃口，然而那庞大的文字量和游戏时间已经让我无法再次完成体会。\n或许再过一段时间，我能静下心来，去再次体会那孤独、绝望最后却伴随救赎的史诗吧。\n\n我期待着那一天。\n","slug":"2016-12-27-日志","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ym60004h0tata8maczt","content":"<p>感觉自己真是脆弱。<br>何时能变得心灵强大起来呢？为什经历一点点的挫折就开始怀疑起周围的一切呢？<br>果然我需要佛学的慰藉，不断磨砺心性，以便自己能够豁达地面对各种遭遇吧。</p>\n<p>电信定位的问题解决了，然而并没有问什么原因，这可能会成为不解之谜了。</p>\n<p>感觉工作效率低，总是忍不住去浏览一些新的技术，老是妄想自己以后有技术了会多么多么富有；然而却做的很少。<br>比如想要写一个秒级的端口扫描器，基于python实现；一开始定的方案是协程+asyncio框架，然而后者看了半天依旧费解。光是一个yeild就让我寻思半天依旧不得其门而入。</p>\n<p>而且感觉最近几天身体状况都不太好，因为天气原因好几天没去跑步了。<br>内啡肽不够，整个人又开始变得很悲观。<br>书什么的也都看不进去，翻了一半的安娜卡列尼娜好久都没动了。<br>对未来不报希望，不知道将来的生活有何值得期待之处。<br>真是令人伤感。</p>\n<p>杭州的天气开始变得很冷很冷，晚上就算穿着两条裤子都觉得关节有点疼。空调开不了制暖，感觉这个冬天不好过。<br>明年争取多赚点钱，然后租一个小套间，能做饭的那种，然后再谈一个女朋友；这样我的生活就能慢慢步入正规。<br>感觉我的问题就是缺乏自信。<br>当然也可能不完全对，我最缺乏的是活着的欲望，感觉一直都是随遇而安，并没有主动地想要去追求什么东西。这大概是童年的挫折养成的一种“习得性无助”吧。<br>从现在开始，改变自己。</p>\n<p>说的倒是容易，改变自己。<br>世间最为困难的莫过于此。<br>我想起异域的那句名言：</p>\n<blockquote>\n<p>what can change the nature of a man?</p>\n</blockquote>\n<p>衰老而臃肿的解谜者彷徨在贫民巷，等待着无名者一次又一次的到来，而每次造访，后者——她的爱人，身上的伤痕越来越多，并且失去的记忆也越来越多。<br>最终，她所期待的只是解脱而已。</p>\n<p>愈发感觉异域的世界观和故事情节很和我的胃口，然而那庞大的文字量和游戏时间已经让我无法再次完成体会。<br>或许再过一段时间，我能静下心来，去再次体会那孤独、绝望最后却伴随救赎的史诗吧。</p>\n<p>我期待着那一天。</p>\n","excerpt":"","more":"<p>感觉自己真是脆弱。<br>何时能变得心灵强大起来呢？为什经历一点点的挫折就开始怀疑起周围的一切呢？<br>果然我需要佛学的慰藉，不断磨砺心性，以便自己能够豁达地面对各种遭遇吧。</p>\n<p>电信定位的问题解决了，然而并没有问什么原因，这可能会成为不解之谜了。</p>\n<p>感觉工作效率低，总是忍不住去浏览一些新的技术，老是妄想自己以后有技术了会多么多么富有；然而却做的很少。<br>比如想要写一个秒级的端口扫描器，基于python实现；一开始定的方案是协程+asyncio框架，然而后者看了半天依旧费解。光是一个yeild就让我寻思半天依旧不得其门而入。</p>\n<p>而且感觉最近几天身体状况都不太好，因为天气原因好几天没去跑步了。<br>内啡肽不够，整个人又开始变得很悲观。<br>书什么的也都看不进去，翻了一半的安娜卡列尼娜好久都没动了。<br>对未来不报希望，不知道将来的生活有何值得期待之处。<br>真是令人伤感。</p>\n<p>杭州的天气开始变得很冷很冷，晚上就算穿着两条裤子都觉得关节有点疼。空调开不了制暖，感觉这个冬天不好过。<br>明年争取多赚点钱，然后租一个小套间，能做饭的那种，然后再谈一个女朋友；这样我的生活就能慢慢步入正规。<br>感觉我的问题就是缺乏自信。<br>当然也可能不完全对，我最缺乏的是活着的欲望，感觉一直都是随遇而安，并没有主动地想要去追求什么东西。这大概是童年的挫折养成的一种“习得性无助”吧。<br>从现在开始，改变自己。</p>\n<p>说的倒是容易，改变自己。<br>世间最为困难的莫过于此。<br>我想起异域的那句名言：</p>\n<blockquote>\n<p>what can change the nature of a man?</p>\n</blockquote>\n<p>衰老而臃肿的解谜者彷徨在贫民巷，等待着无名者一次又一次的到来，而每次造访，后者——她的爱人，身上的伤痕越来越多，并且失去的记忆也越来越多。<br>最终，她所期待的只是解脱而已。</p>\n<p>愈发感觉异域的世界观和故事情节很和我的胃口，然而那庞大的文字量和游戏时间已经让我无法再次完成体会。<br>或许再过一段时间，我能静下心来，去再次体会那孤独、绝望最后却伴随救赎的史诗吧。</p>\n<p>我期待着那一天。</p>\n"},{"title":"2017-01-01 日志","date":"2017-01-01T02:29:16.000Z","_content":"新的一年开始了。\n\n也好几天没写日志了。\n\n几天前纠结的事情已经解决了，心境又开始变得轻松起来。\n","source":"_posts/2017-01-01-日志.md","raw":"---\ntitle: 2017-01-01 日志\ndate: 2017-01-01 10:29:16\ntags:\n- 日志\ncategory:\n- 日志\n---\n新的一年开始了。\n\n也好几天没写日志了。\n\n几天前纠结的事情已经解决了，心境又开始变得轻松起来。\n","slug":"2017-01-01-日志","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymd0006h0tago2gfyvs","content":"<p>新的一年开始了。</p>\n<p>也好几天没写日志了。</p>\n<p>几天前纠结的事情已经解决了，心境又开始变得轻松起来。</p>\n","excerpt":"","more":"<p>新的一年开始了。</p>\n<p>也好几天没写日志了。</p>\n<p>几天前纠结的事情已经解决了，心境又开始变得轻松起来。</p>\n"},{"title":"C程序设计语言：第一章","date":"2017-02-05T12:38:48.000Z","_content":"\n#### 题记\n总算要开始回头看C语言了，太久没用这门语言了，大概有5年了吧。\n真是时光荏苒，但是为了进步，以及更高的编程愉悦感，我还是得忍着重新学习的痛苦，再回顾一遍这本经典的《C程序语言设计》了。\n这里就记录一下心得，还有一些有趣的习题解答吧。\n\n#### 练习\n\n##### 1.5.2字符计数\n\n```C\n\n#include<stdio.h>\n\n/*\n * 练习1-8 编写一个统计空格、制表符、与换行符个数的程序\n * */\n\nint main(void){\n    long nc = 0;\n    int ch;\n    while( (ch = getchar())!= EOF ){\n        if(ch=='\\n' || ch=='\\t' || ch==' '){\n            nc++;\n        }\n    }\n    printf(\"%ld\\n\", nc);\n    return 0;\n}\n```\n\n```C\n#include<stdio.h>\n\n/*\n * 练习1-9 编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格替代\n * */\n\nint main(void){\n    int pre;\n    int curr;\n    curr = getchar();\n    pre = -1;\n\n    while(curr!=EOF){\n        if(curr!=' '||pre!=' '){\n            putchar(curr);\n        }\n        pre = curr;\n        curr = getchar();\n    }\n\n    return 0;\n}\n\n```\n\n\n\n","source":"_posts/C程序设计语言：第一章.md","raw":"---\ntitle: C程序设计语言：第一章\ndate: 2017-02-05 20:38:48\ntags:\n- C\n- 阅读笔记\ncategory:\n- C程序语言设计\n---\n\n#### 题记\n总算要开始回头看C语言了，太久没用这门语言了，大概有5年了吧。\n真是时光荏苒，但是为了进步，以及更高的编程愉悦感，我还是得忍着重新学习的痛苦，再回顾一遍这本经典的《C程序语言设计》了。\n这里就记录一下心得，还有一些有趣的习题解答吧。\n\n#### 练习\n\n##### 1.5.2字符计数\n\n```C\n\n#include<stdio.h>\n\n/*\n * 练习1-8 编写一个统计空格、制表符、与换行符个数的程序\n * */\n\nint main(void){\n    long nc = 0;\n    int ch;\n    while( (ch = getchar())!= EOF ){\n        if(ch=='\\n' || ch=='\\t' || ch==' '){\n            nc++;\n        }\n    }\n    printf(\"%ld\\n\", nc);\n    return 0;\n}\n```\n\n```C\n#include<stdio.h>\n\n/*\n * 练习1-9 编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格替代\n * */\n\nint main(void){\n    int pre;\n    int curr;\n    curr = getchar();\n    pre = -1;\n\n    while(curr!=EOF){\n        if(curr!=' '||pre!=' '){\n            putchar(curr);\n        }\n        pre = curr;\n        curr = getchar();\n    }\n\n    return 0;\n}\n\n```\n\n\n\n","slug":"C程序设计语言：第一章","published":1,"updated":"2017-02-05T13:29:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymh0007h0tagnt9f8f2","content":"<h4 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h4><p>总算要开始回头看C语言了，太久没用这门语言了，大概有5年了吧。<br>真是时光荏苒，但是为了进步，以及更高的编程愉悦感，我还是得忍着重新学习的痛苦，再回顾一遍这本经典的《C程序语言设计》了。<br>这里就记录一下心得，还有一些有趣的习题解答吧。</p>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><h5 id=\"1-5-2字符计数\"><a href=\"#1-5-2字符计数\" class=\"headerlink\" title=\"1.5.2字符计数\"></a>1.5.2字符计数</h5><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"> * 练习1-8 编写一个统计空格、制表符、与换行符个数的程序</div><div class=\"line\"> * */</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">long</span> nc = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> ch;</div><div class=\"line\">    <span class=\"keyword\">while</span>( (ch = getchar())!= EOF )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(ch==<span class=\"string\">'\\n'</span> || ch==<span class=\"string\">'\\t'</span> || ch==<span class=\"string\">' '</span>)&#123;</div><div class=\"line\">            nc++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld\\n\"</span>, nc);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"> * 练习1-9 编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格替代</div><div class=\"line\"> * */</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> pre;</div><div class=\"line\">    <span class=\"keyword\">int</span> curr;</div><div class=\"line\">    curr = getchar();</div><div class=\"line\">    pre = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span>(curr!=EOF)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(curr!=<span class=\"string\">' '</span>||pre!=<span class=\"string\">' '</span>)&#123;</div><div class=\"line\">            <span class=\"built_in\">putchar</span>(curr);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pre = curr;</div><div class=\"line\">        curr = getchar();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h4 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h4><p>总算要开始回头看C语言了，太久没用这门语言了，大概有5年了吧。<br>真是时光荏苒，但是为了进步，以及更高的编程愉悦感，我还是得忍着重新学习的痛苦，再回顾一遍这本经典的《C程序语言设计》了。<br>这里就记录一下心得，还有一些有趣的习题解答吧。</p>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><h5 id=\"1-5-2字符计数\"><a href=\"#1-5-2字符计数\" class=\"headerlink\" title=\"1.5.2字符计数\"></a>1.5.2字符计数</h5><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\"> * 练习1-8 编写一个统计空格、制表符、与换行符个数的程序</div><div class=\"line\"> * */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">long</span> nc = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> ch;</div><div class=\"line\">    <span class=\"keyword\">while</span>( (ch = getchar())!= EOF )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(ch==<span class=\"string\">'\\n'</span> || ch==<span class=\"string\">'\\t'</span> || ch==<span class=\"string\">' '</span>)&#123;</div><div class=\"line\">            nc++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld\\n\"</span>, nc);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\"> * 练习1-9 编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格替代</div><div class=\"line\"> * */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> pre;</div><div class=\"line\">    <span class=\"keyword\">int</span> curr;</div><div class=\"line\">    curr = getchar();</div><div class=\"line\">    pre = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span>(curr!=EOF)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(curr!=<span class=\"string\">' '</span>||pre!=<span class=\"string\">' '</span>)&#123;</div><div class=\"line\">            <span class=\"built_in\">putchar</span>(curr);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pre = curr;</div><div class=\"line\">        curr = getchar();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"TOMCAT假死分析","date":"2017-01-05T12:29:14.000Z","_content":"#### 现象\n+ tomcat假死，无法响应任何请求。\n+ CPU、内存等均无告警，假死之后CPU占用率变得很低。\n+ 无任何异常日志，CLOSE_WATI数正常。\n+ 静态资源也无法访问\n+ 通过命令查看线程数\n\n```\nps -ef|grep tomcat --获取进程ID\nps -T -p <pid>|wc -l -- 获取tomcat下线程数\n```\n\n发现有近1500个线程，这已经到达tomcat线程上限。\n\n#### 获取DUMP日志\n因为生产环境没有装JDK，只有JRE环境，费了好一番功夫才发现有个神奇的命令.\n\n```\nkill -3 <pid>\n```\n\n这个命令并不会导致进程被杀，并且会将相应的线程堆栈信息和大致的内存占用情况输出到tomcat目录下的catalina.out文件中。\n因为这个文件往往较大，所以DUMP前可以先清空这个日志文件。\n\n```\necho \"\">catalina.out -- 这个命令也可以用于运行时释放日志\n```\n\n拿到DUMP后，问题开始明朗起来：\n\n```\n\"http-bio-443-exec-1151\" daemon prio=10 tid=0x00007fd1c96c9000 nid=0x26cb in Object.wait() [0x00007fd0f914e000]\n   java.lang.Thread.State: WAITING (on object monitor)\n    at java.lang.Object.wait(Native Method)\n        - waiting on <0x00000007f5b040f8> (a org.apache.commons.pool.impl.GenericObjectPool$Latch)\n            at java.lang.Object.wait(Object.java:503)\n                at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1118)\n                    - locked <0x00000007f5b040f8> (a org.apache.commons.pool.impl.GenericObjectPool$Latch)\n                        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)\n                            at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)\n                                at org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.getConnection(AbstractRoutingDataSource.java:164)\n                                    at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:205)\n                                        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)\n                                            at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:420)\n                                                at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:257)\n                                                    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95)\n                                                        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n                                                            at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:646)\n\n\n```\n\n有近千个线程处于WAITING状态，都是卡在获取数据库连接这一步上。\n反查数据库中的连接数:\n\n```\nSELECT COUNT(1) FROM GV$SESSION WHERE machine = '主机名'\n```\n\n结果为100，并且这些连接全部处于INACTIVE状态，而数据库连接池配置的maxActive数就是100个。\n说明数据库连接池泄露了。\n\n#### 分析\n应用框架采用的是spring+mybatis+dbcp1.4。\n由于并不需要手动关闭数据库连接，所以业务代码导致这个问题的可能性不大。\ngoogle之后发现dbcp官方JIRA上也report了这个问题，据说是一个BUG，升级到1.5.3版本能解决这个问题。\n但是奇怪的是，应用已经正常运行两年多了，为什么最近才出现这个问题呢？\n难道是因为割接的地市越来越多，导致服务器压力增大，进而导致这个问题的发生？\n如果是DBCP的BUG，那么升级版本或者替换为C3P0应该能够解决这个问题。\n但我不确定是否真的是这个原因，或许业务代码在某种极为巧合的情形下的确会导致连接无法正常关闭；那么鲁莽的行为只会掩盖这个问题，并且在日后造成更大的麻烦。\n所以最好的解决方式是找到连接泄漏的位置。\n通过采用DBCP配置：\n\n```\nmaxWait=5000\nremoveAbandoned=true\nremoveAbandonedTimeout=60\nlogAbandoned=true\n```\n\n来定位问题代码的位置。\n设置的具体含义在官方文档上有，简言之，这样设置之后，在一定条件下，会触发DBCP的回收机制。当一个连接超过一定时间没有被使用，那么就视为abandoned连接，删除之，并记录下该连接的上下文和调用栈。\n\n#### 继续跟踪\n目前连接数还没有到达指标处，继续跟踪，希望明天就能解决这个问题。\n\n#### 终于找到问题了\n\n很偶然的一次排查，我注意到了假死之后的tomcat的Thread Dump中，居然有一百多个线程还处于runable的状态！\n而且这些线程全都是案件证据文件上传、下载的线程！这样一来就和FTP服务器有关了。\n\n这样整个问题出现的逻辑也就清楚了，步骤如下：\n+ 上传文件的方法外面使用了Spring的@Transactional注解，这样就导致只有当事务提交之后，该数据库连接才能关闭\n+ FTP地址需要从数据库中获取，所以该方法会打开数据库连接；并且文件上传成功后需要在证据表中插入一条记录\n+ 出于某种原因，上传文件的线程无法正常结束(不可能是文件过大的原因，因为客户端会判断当文件大于30M时，会访问专门的文件服务器进行分块上传)\n+ 于是Spring无法关闭这个连接，这个连接一直无法被回收到连接池\n+ 无法关闭的连接越来越多，到达设定的上限（100个，堆栈日志相符）；应用无法再获取任何数据库连接，导致相应操作全部挂起，线程处于WAITING状态\n+ 等待状态的线程累计，到达tomcat分配上限，假死\n+ 注意，443端口还是能正常访问静态资源，这是因为不同端口实际上用的线程池并不是同一个\n\n#### 解决方案\n\n+ Transactional的必要性值得怀疑\n+ 本质问题是为什么FTP线程无法结束，需要分析是服务器原因，还是代码原因\n+ 暴力解法：设定定时器，超时直接结束FTP线程\n\n\n\n","source":"_posts/TOMCAT假死分析.md","raw":"---\ntitle: TOMCAT假死分析\ndate: 2017-01-05 20:29:14\ntags:\n- tomcat\n- dbcp\ncategory:\n- CODE\n---\n#### 现象\n+ tomcat假死，无法响应任何请求。\n+ CPU、内存等均无告警，假死之后CPU占用率变得很低。\n+ 无任何异常日志，CLOSE_WATI数正常。\n+ 静态资源也无法访问\n+ 通过命令查看线程数\n\n```\nps -ef|grep tomcat --获取进程ID\nps -T -p <pid>|wc -l -- 获取tomcat下线程数\n```\n\n发现有近1500个线程，这已经到达tomcat线程上限。\n\n#### 获取DUMP日志\n因为生产环境没有装JDK，只有JRE环境，费了好一番功夫才发现有个神奇的命令.\n\n```\nkill -3 <pid>\n```\n\n这个命令并不会导致进程被杀，并且会将相应的线程堆栈信息和大致的内存占用情况输出到tomcat目录下的catalina.out文件中。\n因为这个文件往往较大，所以DUMP前可以先清空这个日志文件。\n\n```\necho \"\">catalina.out -- 这个命令也可以用于运行时释放日志\n```\n\n拿到DUMP后，问题开始明朗起来：\n\n```\n\"http-bio-443-exec-1151\" daemon prio=10 tid=0x00007fd1c96c9000 nid=0x26cb in Object.wait() [0x00007fd0f914e000]\n   java.lang.Thread.State: WAITING (on object monitor)\n    at java.lang.Object.wait(Native Method)\n        - waiting on <0x00000007f5b040f8> (a org.apache.commons.pool.impl.GenericObjectPool$Latch)\n            at java.lang.Object.wait(Object.java:503)\n                at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1118)\n                    - locked <0x00000007f5b040f8> (a org.apache.commons.pool.impl.GenericObjectPool$Latch)\n                        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)\n                            at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)\n                                at org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.getConnection(AbstractRoutingDataSource.java:164)\n                                    at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:205)\n                                        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)\n                                            at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:420)\n                                                at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:257)\n                                                    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95)\n                                                        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n                                                            at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:646)\n\n\n```\n\n有近千个线程处于WAITING状态，都是卡在获取数据库连接这一步上。\n反查数据库中的连接数:\n\n```\nSELECT COUNT(1) FROM GV$SESSION WHERE machine = '主机名'\n```\n\n结果为100，并且这些连接全部处于INACTIVE状态，而数据库连接池配置的maxActive数就是100个。\n说明数据库连接池泄露了。\n\n#### 分析\n应用框架采用的是spring+mybatis+dbcp1.4。\n由于并不需要手动关闭数据库连接，所以业务代码导致这个问题的可能性不大。\ngoogle之后发现dbcp官方JIRA上也report了这个问题，据说是一个BUG，升级到1.5.3版本能解决这个问题。\n但是奇怪的是，应用已经正常运行两年多了，为什么最近才出现这个问题呢？\n难道是因为割接的地市越来越多，导致服务器压力增大，进而导致这个问题的发生？\n如果是DBCP的BUG，那么升级版本或者替换为C3P0应该能够解决这个问题。\n但我不确定是否真的是这个原因，或许业务代码在某种极为巧合的情形下的确会导致连接无法正常关闭；那么鲁莽的行为只会掩盖这个问题，并且在日后造成更大的麻烦。\n所以最好的解决方式是找到连接泄漏的位置。\n通过采用DBCP配置：\n\n```\nmaxWait=5000\nremoveAbandoned=true\nremoveAbandonedTimeout=60\nlogAbandoned=true\n```\n\n来定位问题代码的位置。\n设置的具体含义在官方文档上有，简言之，这样设置之后，在一定条件下，会触发DBCP的回收机制。当一个连接超过一定时间没有被使用，那么就视为abandoned连接，删除之，并记录下该连接的上下文和调用栈。\n\n#### 继续跟踪\n目前连接数还没有到达指标处，继续跟踪，希望明天就能解决这个问题。\n\n#### 终于找到问题了\n\n很偶然的一次排查，我注意到了假死之后的tomcat的Thread Dump中，居然有一百多个线程还处于runable的状态！\n而且这些线程全都是案件证据文件上传、下载的线程！这样一来就和FTP服务器有关了。\n\n这样整个问题出现的逻辑也就清楚了，步骤如下：\n+ 上传文件的方法外面使用了Spring的@Transactional注解，这样就导致只有当事务提交之后，该数据库连接才能关闭\n+ FTP地址需要从数据库中获取，所以该方法会打开数据库连接；并且文件上传成功后需要在证据表中插入一条记录\n+ 出于某种原因，上传文件的线程无法正常结束(不可能是文件过大的原因，因为客户端会判断当文件大于30M时，会访问专门的文件服务器进行分块上传)\n+ 于是Spring无法关闭这个连接，这个连接一直无法被回收到连接池\n+ 无法关闭的连接越来越多，到达设定的上限（100个，堆栈日志相符）；应用无法再获取任何数据库连接，导致相应操作全部挂起，线程处于WAITING状态\n+ 等待状态的线程累计，到达tomcat分配上限，假死\n+ 注意，443端口还是能正常访问静态资源，这是因为不同端口实际上用的线程池并不是同一个\n\n#### 解决方案\n\n+ Transactional的必要性值得怀疑\n+ 本质问题是为什么FTP线程无法结束，需要分析是服务器原因，还是代码原因\n+ 暴力解法：设定定时器，超时直接结束FTP线程\n\n\n\n","slug":"TOMCAT假死分析","published":1,"updated":"2017-02-05T13:46:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8yml0009h0tap1ij1oni","content":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><ul>\n<li>tomcat假死，无法响应任何请求。</li>\n<li>CPU、内存等均无告警，假死之后CPU占用率变得很低。</li>\n<li>无任何异常日志，CLOSE_WATI数正常。</li>\n<li>静态资源也无法访问</li>\n<li>通过命令查看线程数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef|grep tomcat --获取进程ID</div><div class=\"line\">ps -T -p &lt;pid&gt;|wc -l -- 获取tomcat下线程数</div></pre></td></tr></table></figure>\n<p>发现有近1500个线程，这已经到达tomcat线程上限。</p>\n<h4 id=\"获取DUMP日志\"><a href=\"#获取DUMP日志\" class=\"headerlink\" title=\"获取DUMP日志\"></a>获取DUMP日志</h4><p>因为生产环境没有装JDK，只有JRE环境，费了好一番功夫才发现有个神奇的命令.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -3 &lt;pid&gt;</div></pre></td></tr></table></figure>\n<p>这个命令并不会导致进程被杀，并且会将相应的线程堆栈信息和大致的内存占用情况输出到tomcat目录下的catalina.out文件中。<br>因为这个文件往往较大，所以DUMP前可以先清空这个日志文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;&quot;&gt;catalina.out -- 这个命令也可以用于运行时释放日志</div></pre></td></tr></table></figure>\n<p>拿到DUMP后，问题开始明朗起来：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;http-bio-443-exec-1151&quot; daemon prio=10 tid=0x00007fd1c96c9000 nid=0x26cb in Object.wait() [0x00007fd0f914e000]</div><div class=\"line\">   java.lang.Thread.State: WAITING (on object monitor)</div><div class=\"line\">    at java.lang.Object.wait(Native Method)</div><div class=\"line\">        - waiting on &lt;0x00000007f5b040f8&gt; (a org.apache.commons.pool.impl.GenericObjectPool$Latch)</div><div class=\"line\">            at java.lang.Object.wait(Object.java:503)</div><div class=\"line\">                at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1118)</div><div class=\"line\">                    - locked &lt;0x00000007f5b040f8&gt; (a org.apache.commons.pool.impl.GenericObjectPool$Latch)</div><div class=\"line\">                        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)</div><div class=\"line\">                            at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)</div><div class=\"line\">                                at org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.getConnection(AbstractRoutingDataSource.java:164)</div><div class=\"line\">                                    at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:205)</div><div class=\"line\">                                        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)</div><div class=\"line\">                                            at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:420)</div><div class=\"line\">                                                at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:257)</div><div class=\"line\">                                                    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95)</div><div class=\"line\">                                                        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</div><div class=\"line\">                                                            at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:646)</div></pre></td></tr></table></figure>\n<p>有近千个线程处于WAITING状态，都是卡在获取数据库连接这一步上。<br>反查数据库中的连接数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT COUNT(1) FROM GV$SESSION WHERE machine = &apos;主机名&apos;</div></pre></td></tr></table></figure>\n<p>结果为100，并且这些连接全部处于INACTIVE状态，而数据库连接池配置的maxActive数就是100个。<br>说明数据库连接池泄露了。</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>应用框架采用的是spring+mybatis+dbcp1.4。<br>由于并不需要手动关闭数据库连接，所以业务代码导致这个问题的可能性不大。<br>google之后发现dbcp官方JIRA上也report了这个问题，据说是一个BUG，升级到1.5.3版本能解决这个问题。<br>但是奇怪的是，应用已经正常运行两年多了，为什么最近才出现这个问题呢？<br>难道是因为割接的地市越来越多，导致服务器压力增大，进而导致这个问题的发生？<br>如果是DBCP的BUG，那么升级版本或者替换为C3P0应该能够解决这个问题。<br>但我不确定是否真的是这个原因，或许业务代码在某种极为巧合的情形下的确会导致连接无法正常关闭；那么鲁莽的行为只会掩盖这个问题，并且在日后造成更大的麻烦。<br>所以最好的解决方式是找到连接泄漏的位置。<br>通过采用DBCP配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">maxWait=5000</div><div class=\"line\">removeAbandoned=true</div><div class=\"line\">removeAbandonedTimeout=60</div><div class=\"line\">logAbandoned=true</div></pre></td></tr></table></figure>\n<p>来定位问题代码的位置。<br>设置的具体含义在官方文档上有，简言之，这样设置之后，在一定条件下，会触发DBCP的回收机制。当一个连接超过一定时间没有被使用，那么就视为abandoned连接，删除之，并记录下该连接的上下文和调用栈。</p>\n<h4 id=\"继续跟踪\"><a href=\"#继续跟踪\" class=\"headerlink\" title=\"继续跟踪\"></a>继续跟踪</h4><p>目前连接数还没有到达指标处，继续跟踪，希望明天就能解决这个问题。</p>\n<h4 id=\"终于找到问题了\"><a href=\"#终于找到问题了\" class=\"headerlink\" title=\"终于找到问题了\"></a>终于找到问题了</h4><p>很偶然的一次排查，我注意到了假死之后的tomcat的Thread Dump中，居然有一百多个线程还处于runable的状态！<br>而且这些线程全都是案件证据文件上传、下载的线程！这样一来就和FTP服务器有关了。</p>\n<p>这样整个问题出现的逻辑也就清楚了，步骤如下：</p>\n<ul>\n<li>上传文件的方法外面使用了Spring的@Transactional注解，这样就导致只有当事务提交之后，该数据库连接才能关闭</li>\n<li>FTP地址需要从数据库中获取，所以该方法会打开数据库连接；并且文件上传成功后需要在证据表中插入一条记录</li>\n<li>出于某种原因，上传文件的线程无法正常结束(不可能是文件过大的原因，因为客户端会判断当文件大于30M时，会访问专门的文件服务器进行分块上传)</li>\n<li>于是Spring无法关闭这个连接，这个连接一直无法被回收到连接池</li>\n<li>无法关闭的连接越来越多，到达设定的上限（100个，堆栈日志相符）；应用无法再获取任何数据库连接，导致相应操作全部挂起，线程处于WAITING状态</li>\n<li>等待状态的线程累计，到达tomcat分配上限，假死</li>\n<li>注意，443端口还是能正常访问静态资源，这是因为不同端口实际上用的线程池并不是同一个</li>\n</ul>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><ul>\n<li>Transactional的必要性值得怀疑</li>\n<li>本质问题是为什么FTP线程无法结束，需要分析是服务器原因，还是代码原因</li>\n<li>暴力解法：设定定时器，超时直接结束FTP线程</li>\n</ul>\n","excerpt":"","more":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><ul>\n<li>tomcat假死，无法响应任何请求。</li>\n<li>CPU、内存等均无告警，假死之后CPU占用率变得很低。</li>\n<li>无任何异常日志，CLOSE_WATI数正常。</li>\n<li>静态资源也无法访问</li>\n<li>通过命令查看线程数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef|grep tomcat --获取进程ID</div><div class=\"line\">ps -T -p &lt;pid&gt;|wc -l -- 获取tomcat下线程数</div></pre></td></tr></table></figure>\n<p>发现有近1500个线程，这已经到达tomcat线程上限。</p>\n<h4 id=\"获取DUMP日志\"><a href=\"#获取DUMP日志\" class=\"headerlink\" title=\"获取DUMP日志\"></a>获取DUMP日志</h4><p>因为生产环境没有装JDK，只有JRE环境，费了好一番功夫才发现有个神奇的命令.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -3 &lt;pid&gt;</div></pre></td></tr></table></figure>\n<p>这个命令并不会导致进程被杀，并且会将相应的线程堆栈信息和大致的内存占用情况输出到tomcat目录下的catalina.out文件中。<br>因为这个文件往往较大，所以DUMP前可以先清空这个日志文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;&quot;&gt;catalina.out -- 这个命令也可以用于运行时释放日志</div></pre></td></tr></table></figure>\n<p>拿到DUMP后，问题开始明朗起来：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;http-bio-443-exec-1151&quot; daemon prio=10 tid=0x00007fd1c96c9000 nid=0x26cb in Object.wait() [0x00007fd0f914e000]</div><div class=\"line\">   java.lang.Thread.State: WAITING (on object monitor)</div><div class=\"line\">    at java.lang.Object.wait(Native Method)</div><div class=\"line\">        - waiting on &lt;0x00000007f5b040f8&gt; (a org.apache.commons.pool.impl.GenericObjectPool$Latch)</div><div class=\"line\">            at java.lang.Object.wait(Object.java:503)</div><div class=\"line\">                at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1118)</div><div class=\"line\">                    - locked &lt;0x00000007f5b040f8&gt; (a org.apache.commons.pool.impl.GenericObjectPool$Latch)</div><div class=\"line\">                        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)</div><div class=\"line\">                            at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)</div><div class=\"line\">                                at org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.getConnection(AbstractRoutingDataSource.java:164)</div><div class=\"line\">                                    at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:205)</div><div class=\"line\">                                        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)</div><div class=\"line\">                                            at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:420)</div><div class=\"line\">                                                at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:257)</div><div class=\"line\">                                                    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95)</div><div class=\"line\">                                                        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</div><div class=\"line\">                                                            at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:646)</div></pre></td></tr></table></figure>\n<p>有近千个线程处于WAITING状态，都是卡在获取数据库连接这一步上。<br>反查数据库中的连接数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT COUNT(1) FROM GV$SESSION WHERE machine = &apos;主机名&apos;</div></pre></td></tr></table></figure>\n<p>结果为100，并且这些连接全部处于INACTIVE状态，而数据库连接池配置的maxActive数就是100个。<br>说明数据库连接池泄露了。</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>应用框架采用的是spring+mybatis+dbcp1.4。<br>由于并不需要手动关闭数据库连接，所以业务代码导致这个问题的可能性不大。<br>google之后发现dbcp官方JIRA上也report了这个问题，据说是一个BUG，升级到1.5.3版本能解决这个问题。<br>但是奇怪的是，应用已经正常运行两年多了，为什么最近才出现这个问题呢？<br>难道是因为割接的地市越来越多，导致服务器压力增大，进而导致这个问题的发生？<br>如果是DBCP的BUG，那么升级版本或者替换为C3P0应该能够解决这个问题。<br>但我不确定是否真的是这个原因，或许业务代码在某种极为巧合的情形下的确会导致连接无法正常关闭；那么鲁莽的行为只会掩盖这个问题，并且在日后造成更大的麻烦。<br>所以最好的解决方式是找到连接泄漏的位置。<br>通过采用DBCP配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">maxWait=5000</div><div class=\"line\">removeAbandoned=true</div><div class=\"line\">removeAbandonedTimeout=60</div><div class=\"line\">logAbandoned=true</div></pre></td></tr></table></figure>\n<p>来定位问题代码的位置。<br>设置的具体含义在官方文档上有，简言之，这样设置之后，在一定条件下，会触发DBCP的回收机制。当一个连接超过一定时间没有被使用，那么就视为abandoned连接，删除之，并记录下该连接的上下文和调用栈。</p>\n<h4 id=\"继续跟踪\"><a href=\"#继续跟踪\" class=\"headerlink\" title=\"继续跟踪\"></a>继续跟踪</h4><p>目前连接数还没有到达指标处，继续跟踪，希望明天就能解决这个问题。</p>\n<h4 id=\"终于找到问题了\"><a href=\"#终于找到问题了\" class=\"headerlink\" title=\"终于找到问题了\"></a>终于找到问题了</h4><p>很偶然的一次排查，我注意到了假死之后的tomcat的Thread Dump中，居然有一百多个线程还处于runable的状态！<br>而且这些线程全都是案件证据文件上传、下载的线程！这样一来就和FTP服务器有关了。</p>\n<p>这样整个问题出现的逻辑也就清楚了，步骤如下：</p>\n<ul>\n<li>上传文件的方法外面使用了Spring的@Transactional注解，这样就导致只有当事务提交之后，该数据库连接才能关闭</li>\n<li>FTP地址需要从数据库中获取，所以该方法会打开数据库连接；并且文件上传成功后需要在证据表中插入一条记录</li>\n<li>出于某种原因，上传文件的线程无法正常结束(不可能是文件过大的原因，因为客户端会判断当文件大于30M时，会访问专门的文件服务器进行分块上传)</li>\n<li>于是Spring无法关闭这个连接，这个连接一直无法被回收到连接池</li>\n<li>无法关闭的连接越来越多，到达设定的上限（100个，堆栈日志相符）；应用无法再获取任何数据库连接，导致相应操作全部挂起，线程处于WAITING状态</li>\n<li>等待状态的线程累计，到达tomcat分配上限，假死</li>\n<li>注意，443端口还是能正常访问静态资源，这是因为不同端口实际上用的线程池并不是同一个</li>\n</ul>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><ul>\n<li>Transactional的必要性值得怀疑</li>\n<li>本质问题是为什么FTP线程无法结束，需要分析是服务器原因，还是代码原因</li>\n<li>暴力解法：设定定时器，超时直接结束FTP线程</li>\n</ul>\n"},{"title":"lucune初体验","date":"2017-01-27T08:21:50.000Z","_content":"\n为了方便以后查看应用服务器的日志，我准备自行开发一个提供全文检索功能的app。\napache果然无所不能，已经有了现成的解决方案。有开发包，有封装好的app。我选择了lucune这个开发包。\n经过了几次搜索我大致了解了lucune的使用流程。第一步，也就是最关键的一步，是生成全文的索引，这涉及到了切词，不过也不用想得太麻烦，毕竟apache都已经帮我们解决了最困难的问题。\n我们所需要做的，只是学习如何操作这个开发包。\n\n","source":"_posts/lucune初体验.md","raw":"---\ntitle: lucune初体验\ndate: 2017-01-27 16:21:50\ntags:\n- 全文检索\ncategory:\n- lucune\n---\n\n为了方便以后查看应用服务器的日志，我准备自行开发一个提供全文检索功能的app。\napache果然无所不能，已经有了现成的解决方案。有开发包，有封装好的app。我选择了lucune这个开发包。\n经过了几次搜索我大致了解了lucune的使用流程。第一步，也就是最关键的一步，是生成全文的索引，这涉及到了切词，不过也不用想得太麻烦，毕竟apache都已经帮我们解决了最困难的问题。\n我们所需要做的，只是学习如何操作这个开发包。\n\n","slug":"lucune初体验","published":1,"updated":"2017-01-27T08:45:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymp000dh0tax13b7kjs","content":"<p>为了方便以后查看应用服务器的日志，我准备自行开发一个提供全文检索功能的app。<br>apache果然无所不能，已经有了现成的解决方案。有开发包，有封装好的app。我选择了lucune这个开发包。<br>经过了几次搜索我大致了解了lucune的使用流程。第一步，也就是最关键的一步，是生成全文的索引，这涉及到了切词，不过也不用想得太麻烦，毕竟apache都已经帮我们解决了最困难的问题。<br>我们所需要做的，只是学习如何操作这个开发包。</p>\n","excerpt":"","more":"<p>为了方便以后查看应用服务器的日志，我准备自行开发一个提供全文检索功能的app。<br>apache果然无所不能，已经有了现成的解决方案。有开发包，有封装好的app。我选择了lucune这个开发包。<br>经过了几次搜索我大致了解了lucune的使用流程。第一步，也就是最关键的一步，是生成全文的索引，这涉及到了切词，不过也不用想得太麻烦，毕竟apache都已经帮我们解决了最困难的问题。<br>我们所需要做的，只是学习如何操作这个开发包。</p>\n"},{"title":"mac开发环境搭建小记","date":"2017-01-27T01:49:11.000Z","_content":"\n悲剧，昨晚写的东西全没了。只能重新写一遍了。\n\n想说的东西不多，就是买了个apple air。手感还可以，键盘没有想象中的那么糟糕。\n\n系统很好用，漂亮的UI以及bash shell都很好，结合了windows的桌面和linux的快捷和强大。\n\n然后就是安装了一些程序员会用到的软件包。\n\n```\niTerm2 -- 强大的shell窗口，用来代替mac自身的命令行窗口，结合了imux的功能。由于暂时还不熟悉，以后再说\nzsh --bash的超集，方便好用的命令自动补全功能，而且还不用区分大小写\noh my zsh --集成化的zsh配置，傻瓜也能用zsh了\nalfred --生产力提高工具，能快捷地打开程序、自动搜索文件以及url等等，感觉360的某个功能就是抄它的\nbrew --自动化安装工具，通过brew install wget这种语法，方便快捷地安装linux程序\ngit --必装\nshadowssocks --必装，科学上网的神器，配合几块钱一个月的ssh服务器，能用的很爽。另外注意配置gi代理时，协议应为socks5\njdk --oracle官网有安装包，有mac版，但感觉不好用，像是自动档，都没有JAVA_HOME和CLASSPATH之类的东西。\neclipse --想来想去还是装了，编译用的内存应该多点，这个小本子应该够用，这几天准备看看全文搜索。然后搭建一个日志全文检索的服务器，这样以后排查问题就方便多了\ntomcat --解压即可\n\nnodejs --感觉nodejs很有前途，而且脚本语言应该能在这台本子上跑得流畅一点，至少比java编译半天要好\nhexo --写博客必备，另外注意的是，在最新版的node环境下，安装hexo的命令比较特殊：npm install hexo --no-optional --save\n\n```\n\n其他的用到之后再装吧。\n\n用来来感觉很流畅，基本没有感受到卡顿。电池没有宣传的那么神，顶多用5个小时吧，就写代码和听音乐。\n\n其他就没有什么了。\n\n\n另外这次放假，需要完成的目标有：\n+ 熟悉lucune这个全文检索开发包\n+ 写小说，至少写个3万字吧。真的应该开始赚点零花钱了，工资只有那么点钱，根本不够用。\n+ 熟悉mac系统，撰写各种方便开发的脚本。\n\n","source":"_posts/mac开发环境搭建小记.md","raw":"---\ntitle: mac开发环境搭建小记\ndate: 2017-01-27 09:49:11\ntags:\n- mac\ncategory:\n- 日志\n---\n\n悲剧，昨晚写的东西全没了。只能重新写一遍了。\n\n想说的东西不多，就是买了个apple air。手感还可以，键盘没有想象中的那么糟糕。\n\n系统很好用，漂亮的UI以及bash shell都很好，结合了windows的桌面和linux的快捷和强大。\n\n然后就是安装了一些程序员会用到的软件包。\n\n```\niTerm2 -- 强大的shell窗口，用来代替mac自身的命令行窗口，结合了imux的功能。由于暂时还不熟悉，以后再说\nzsh --bash的超集，方便好用的命令自动补全功能，而且还不用区分大小写\noh my zsh --集成化的zsh配置，傻瓜也能用zsh了\nalfred --生产力提高工具，能快捷地打开程序、自动搜索文件以及url等等，感觉360的某个功能就是抄它的\nbrew --自动化安装工具，通过brew install wget这种语法，方便快捷地安装linux程序\ngit --必装\nshadowssocks --必装，科学上网的神器，配合几块钱一个月的ssh服务器，能用的很爽。另外注意配置gi代理时，协议应为socks5\njdk --oracle官网有安装包，有mac版，但感觉不好用，像是自动档，都没有JAVA_HOME和CLASSPATH之类的东西。\neclipse --想来想去还是装了，编译用的内存应该多点，这个小本子应该够用，这几天准备看看全文搜索。然后搭建一个日志全文检索的服务器，这样以后排查问题就方便多了\ntomcat --解压即可\n\nnodejs --感觉nodejs很有前途，而且脚本语言应该能在这台本子上跑得流畅一点，至少比java编译半天要好\nhexo --写博客必备，另外注意的是，在最新版的node环境下，安装hexo的命令比较特殊：npm install hexo --no-optional --save\n\n```\n\n其他的用到之后再装吧。\n\n用来来感觉很流畅，基本没有感受到卡顿。电池没有宣传的那么神，顶多用5个小时吧，就写代码和听音乐。\n\n其他就没有什么了。\n\n\n另外这次放假，需要完成的目标有：\n+ 熟悉lucune这个全文检索开发包\n+ 写小说，至少写个3万字吧。真的应该开始赚点零花钱了，工资只有那么点钱，根本不够用。\n+ 熟悉mac系统，撰写各种方便开发的脚本。\n\n","slug":"mac开发环境搭建小记","published":1,"updated":"2017-01-27T02:04:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymt000gh0tal9d6iyqo","content":"<p>悲剧，昨晚写的东西全没了。只能重新写一遍了。</p>\n<p>想说的东西不多，就是买了个apple air。手感还可以，键盘没有想象中的那么糟糕。</p>\n<p>系统很好用，漂亮的UI以及bash shell都很好，结合了windows的桌面和linux的快捷和强大。</p>\n<p>然后就是安装了一些程序员会用到的软件包。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">iTerm2 -- 强大的shell窗口，用来代替mac自身的命令行窗口，结合了imux的功能。由于暂时还不熟悉，以后再说</div><div class=\"line\">zsh --bash的超集，方便好用的命令自动补全功能，而且还不用区分大小写</div><div class=\"line\">oh my zsh --集成化的zsh配置，傻瓜也能用zsh了</div><div class=\"line\">alfred --生产力提高工具，能快捷地打开程序、自动搜索文件以及url等等，感觉360的某个功能就是抄它的</div><div class=\"line\">brew --自动化安装工具，通过brew install wget这种语法，方便快捷地安装linux程序</div><div class=\"line\">git --必装</div><div class=\"line\">shadowssocks --必装，科学上网的神器，配合几块钱一个月的ssh服务器，能用的很爽。另外注意配置gi代理时，协议应为socks5</div><div class=\"line\">jdk --oracle官网有安装包，有mac版，但感觉不好用，像是自动档，都没有JAVA_HOME和CLASSPATH之类的东西。</div><div class=\"line\">eclipse --想来想去还是装了，编译用的内存应该多点，这个小本子应该够用，这几天准备看看全文搜索。然后搭建一个日志全文检索的服务器，这样以后排查问题就方便多了</div><div class=\"line\">tomcat --解压即可</div><div class=\"line\"></div><div class=\"line\">nodejs --感觉nodejs很有前途，而且脚本语言应该能在这台本子上跑得流畅一点，至少比java编译半天要好</div><div class=\"line\">hexo --写博客必备，另外注意的是，在最新版的node环境下，安装hexo的命令比较特殊：npm install hexo --no-optional --save</div></pre></td></tr></table></figure>\n<p>其他的用到之后再装吧。</p>\n<p>用来来感觉很流畅，基本没有感受到卡顿。电池没有宣传的那么神，顶多用5个小时吧，就写代码和听音乐。</p>\n<p>其他就没有什么了。</p>\n<p>另外这次放假，需要完成的目标有：</p>\n<ul>\n<li>熟悉lucune这个全文检索开发包</li>\n<li>写小说，至少写个3万字吧。真的应该开始赚点零花钱了，工资只有那么点钱，根本不够用。</li>\n<li>熟悉mac系统，撰写各种方便开发的脚本。</li>\n</ul>\n","excerpt":"","more":"<p>悲剧，昨晚写的东西全没了。只能重新写一遍了。</p>\n<p>想说的东西不多，就是买了个apple air。手感还可以，键盘没有想象中的那么糟糕。</p>\n<p>系统很好用，漂亮的UI以及bash shell都很好，结合了windows的桌面和linux的快捷和强大。</p>\n<p>然后就是安装了一些程序员会用到的软件包。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">iTerm2 -- 强大的shell窗口，用来代替mac自身的命令行窗口，结合了imux的功能。由于暂时还不熟悉，以后再说</div><div class=\"line\">zsh --bash的超集，方便好用的命令自动补全功能，而且还不用区分大小写</div><div class=\"line\">oh my zsh --集成化的zsh配置，傻瓜也能用zsh了</div><div class=\"line\">alfred --生产力提高工具，能快捷地打开程序、自动搜索文件以及url等等，感觉360的某个功能就是抄它的</div><div class=\"line\">brew --自动化安装工具，通过brew install wget这种语法，方便快捷地安装linux程序</div><div class=\"line\">git --必装</div><div class=\"line\">shadowssocks --必装，科学上网的神器，配合几块钱一个月的ssh服务器，能用的很爽。另外注意配置gi代理时，协议应为socks5</div><div class=\"line\">jdk --oracle官网有安装包，有mac版，但感觉不好用，像是自动档，都没有JAVA_HOME和CLASSPATH之类的东西。</div><div class=\"line\">eclipse --想来想去还是装了，编译用的内存应该多点，这个小本子应该够用，这几天准备看看全文搜索。然后搭建一个日志全文检索的服务器，这样以后排查问题就方便多了</div><div class=\"line\">tomcat --解压即可</div><div class=\"line\"></div><div class=\"line\">nodejs --感觉nodejs很有前途，而且脚本语言应该能在这台本子上跑得流畅一点，至少比java编译半天要好</div><div class=\"line\">hexo --写博客必备，另外注意的是，在最新版的node环境下，安装hexo的命令比较特殊：npm install hexo --no-optional --save</div></pre></td></tr></table></figure>\n<p>其他的用到之后再装吧。</p>\n<p>用来来感觉很流畅，基本没有感受到卡顿。电池没有宣传的那么神，顶多用5个小时吧，就写代码和听音乐。</p>\n<p>其他就没有什么了。</p>\n<p>另外这次放假，需要完成的目标有：</p>\n<ul>\n<li>熟悉lucune这个全文检索开发包</li>\n<li>写小说，至少写个3万字吧。真的应该开始赚点零花钱了，工资只有那么点钱，根本不够用。</li>\n<li>熟悉mac系统，撰写各种方便开发的脚本。</li>\n</ul>\n"},{"title":"动态数据源路由容易掉进去的坑","date":"2017-01-23T22:19:27.000Z","_content":"\n#### 场景\n\n由于业务要求需要在不同的生产库、查询库（查询库中又包含多个子查询库）之间动态切换，所以使用了Spring提供的动态数据源路由功能。\n这个功能的基本原理，是将具体的数据库和一个枚举类作为键值对，由Spring提供的DynamicDataSourceRouting进行管理，然后将作为key的枚举类保存在ThreadLocal中以保证线程独立。这样在业务需要时，可以动态的根据一些条件，比如用户所处的行政区划之类的变量，动态的改变当前数据源。\n\n一开始，只有生产库和查询库两个数据源之间进行切换，后来根据业务需求，需要分摊统计查询的压力，将查询库切分为11个地市的子查询库。\n看起来，没有任何问题，只是在切换数据源时，多了一层切换操作，然后奇怪的问题发生了：本来应该插入到生产库的数据，被随机地插入到了不同的子查询库中。\n\n#### 代码还原\n\n以下是精简之后的代码:\n\n```\n//生产库、查询库所对应的key\npublic enum DataSourceKind{\n    READ, WRITE\n}\n\n//各个查询库所对应的key\npublic enum ReadDataSourceKind{\n    NingBo, WenZhou, JiaXing, ShaoXing...//略\n}\n```\n\n```\n//持有ThreadLocal的类，提供对于线程独立变量的访问\npublic class DataSourceHolder{\n    private static final ThreadLocal<DataSourceKind> dataSource = new ThreadLocal<DataSourceKind>();\n\n    //获取当前数据源\n    public static DataSourceKind getDataSource(){ return dataSource.get();}\n    //设置当前数据源\n    public static void setDataSource(DataSourceKind kind){ dataSource.set(kind);}\n\n}\n\n//略过各个查询库的holder\n```\n\n```\n//继承Spring的动态数据源路由，复写获取数据源key方法\npublic class MyDynamicDataSourceRouting extends DynamicDataSourceRouting{\n\n    @Override\n    protected Object determineCurrentLookupKey() {\n        return DataSourceHolder.getDataSource();\n    }\n}\n\n//略过查询库的routing\n```\n\n具体的切换用到了SpringAOP，大致就是定义一个@DbReadOnly注解，然后当检测到有方法使用了该注解，就进行数据源的切换。\n具体的业务场景中，只有很少一部分统计分析的请求会使用查询库，并且所有的@DbReadOnly注解基本上都是在Controller层。\n第一步先切换到READ， 然后根据当前登录用户所处行政区划来进行查询库的切换，等到这个请求完成之后，再在finally中切换回默认的生产库来。\n\n```\npublic Object proceed(Proceed obj){\n    DataSourceHolder.setDataSource(DataSourceKind.READ);\n    User user = SessionUtils.getCurrentUser();    //获取当前登录的用户\n    String xzqh = user.getXzqh();\n    if(xzqh.equals(XzqhConsts.JinHua)){ ReadDataSourceHolder.setDataSource(ReadDataSourceKind.JinHua);}\n    else if(xzqh.equals(XzqhConsts.WenZhou){ ReadDataSourceHolder.setDataSource(ReadDataSourceKind.WenZhou);})\n    ....//略\n    \n    try{\n        return obj.proceed();\n    }catch(Exception e){\n        e.printStackTrace();\n    }finally{\n        DataSourceHolder.setDataSource(DataSourceKind.WRITE);    //重置为生产库\n    }\n\n}\n```\n\n#### 分析与提示\n\n有经验的老司机大概已经看出了问题所在， 数据之所以会写入到查询库的原因实在是很可笑。\n还没明白过来的兄弟可以先看看接下来的提示。\n\n对于这个问题，我一开始根本摸不着头脑，因为在我的理解中，就算有线程没有切换回生产库，这个线程也会因为请求结束而被结束。\n更何况涉及到查询库的那些请求根本不涉及INSERT操作。\n\n更何况怎么可能不切换回生产库呢？finally中的代码无论如何，就算抛运行时异常，也应该是会执行的啊？\n\n难道一个线程会被多个请求同时使用？或者ThreadLocal并不是真正的ThreadLocal?而是会在线程之间互相影响？\n\n最后绝望的我甚至还开始怀疑起枚举类是否是线程安全的。\n\n我也是被问题迷糊了头脑，实际上这个问题非常简单，我不过是在一堆错误的前提下做着无望的挣扎，而没有去怀疑自己所坚信的这些前提是否是成立的。\n\n我觉得当遇到一个看似匪夷所思，甚至毫无可能发生的异常时，需要有清醒的头脑，来反过来质疑看似坚固的前提。\n\n下面是两个小小的提示：\n+ 线程真的会因为请求结束而结束吗？\n+ 上面finally的代码真的必然后执行吗？\n\n#### 柳暗花明\n\n很遗憾，对于上面两个问题的答案，其实都是否定的。\n\n事实上，Tomcat存在一个线程池机制，对于完成了请求的线程，并不会立即释放，而是回收到线程池中；并且，很关键的一点是，tomcat并不会清空ThreadLocal变量。\n\n第二个问题，非常可笑的，虽然finally的确必然会执行，然而这是有条件的：如果程序在try代码块之外抛了异常，那么finally将不会被执行。\n\n至此，一切谜题的答案已经展现在眼前。\n\n用户的session丢失，会导致获取xzqh那一行代码抛空指针异常，然而之前已经切换为READ库，所以当前线程已经指向了查询库，又因为抛运行时异常，所以请求结束；\n接着，线程被回收，进入线程池；过了不知道多久，有一个倒霉的请求被分配到了这个线程上执行，然后因为数据源并不会切换到WRITE中，所以INSERT操作会进入到查询库。\n\n#### 总结\n\n看似不可思议的问题， 既然真真切切的发生了，那么必然又一个合乎逻辑的解释；看似不可思议，不过是因为你误解了某些前提。\n另外我这么久也没看出问题所在，仅仅是以为我基础不够，否则如果我早知道tomcat有这么玄妙的线程池机制，那么我应该很快就能想到问题的关键点所在。\n\n不过，总的来说，这是一场很有趣的解谜体验。：）\n\n","source":"_posts/动态数据源路由容易掉进去的坑.md","raw":"---\ntitle: 动态数据源路由容易掉进去的坑\ndate: 2017-01-24 06:19:27\ntags:\n- BUG\n- Spring\n- DynamicDataSourceRouting\ncategory:\n- zjipst\n---\n\n#### 场景\n\n由于业务要求需要在不同的生产库、查询库（查询库中又包含多个子查询库）之间动态切换，所以使用了Spring提供的动态数据源路由功能。\n这个功能的基本原理，是将具体的数据库和一个枚举类作为键值对，由Spring提供的DynamicDataSourceRouting进行管理，然后将作为key的枚举类保存在ThreadLocal中以保证线程独立。这样在业务需要时，可以动态的根据一些条件，比如用户所处的行政区划之类的变量，动态的改变当前数据源。\n\n一开始，只有生产库和查询库两个数据源之间进行切换，后来根据业务需求，需要分摊统计查询的压力，将查询库切分为11个地市的子查询库。\n看起来，没有任何问题，只是在切换数据源时，多了一层切换操作，然后奇怪的问题发生了：本来应该插入到生产库的数据，被随机地插入到了不同的子查询库中。\n\n#### 代码还原\n\n以下是精简之后的代码:\n\n```\n//生产库、查询库所对应的key\npublic enum DataSourceKind{\n    READ, WRITE\n}\n\n//各个查询库所对应的key\npublic enum ReadDataSourceKind{\n    NingBo, WenZhou, JiaXing, ShaoXing...//略\n}\n```\n\n```\n//持有ThreadLocal的类，提供对于线程独立变量的访问\npublic class DataSourceHolder{\n    private static final ThreadLocal<DataSourceKind> dataSource = new ThreadLocal<DataSourceKind>();\n\n    //获取当前数据源\n    public static DataSourceKind getDataSource(){ return dataSource.get();}\n    //设置当前数据源\n    public static void setDataSource(DataSourceKind kind){ dataSource.set(kind);}\n\n}\n\n//略过各个查询库的holder\n```\n\n```\n//继承Spring的动态数据源路由，复写获取数据源key方法\npublic class MyDynamicDataSourceRouting extends DynamicDataSourceRouting{\n\n    @Override\n    protected Object determineCurrentLookupKey() {\n        return DataSourceHolder.getDataSource();\n    }\n}\n\n//略过查询库的routing\n```\n\n具体的切换用到了SpringAOP，大致就是定义一个@DbReadOnly注解，然后当检测到有方法使用了该注解，就进行数据源的切换。\n具体的业务场景中，只有很少一部分统计分析的请求会使用查询库，并且所有的@DbReadOnly注解基本上都是在Controller层。\n第一步先切换到READ， 然后根据当前登录用户所处行政区划来进行查询库的切换，等到这个请求完成之后，再在finally中切换回默认的生产库来。\n\n```\npublic Object proceed(Proceed obj){\n    DataSourceHolder.setDataSource(DataSourceKind.READ);\n    User user = SessionUtils.getCurrentUser();    //获取当前登录的用户\n    String xzqh = user.getXzqh();\n    if(xzqh.equals(XzqhConsts.JinHua)){ ReadDataSourceHolder.setDataSource(ReadDataSourceKind.JinHua);}\n    else if(xzqh.equals(XzqhConsts.WenZhou){ ReadDataSourceHolder.setDataSource(ReadDataSourceKind.WenZhou);})\n    ....//略\n    \n    try{\n        return obj.proceed();\n    }catch(Exception e){\n        e.printStackTrace();\n    }finally{\n        DataSourceHolder.setDataSource(DataSourceKind.WRITE);    //重置为生产库\n    }\n\n}\n```\n\n#### 分析与提示\n\n有经验的老司机大概已经看出了问题所在， 数据之所以会写入到查询库的原因实在是很可笑。\n还没明白过来的兄弟可以先看看接下来的提示。\n\n对于这个问题，我一开始根本摸不着头脑，因为在我的理解中，就算有线程没有切换回生产库，这个线程也会因为请求结束而被结束。\n更何况涉及到查询库的那些请求根本不涉及INSERT操作。\n\n更何况怎么可能不切换回生产库呢？finally中的代码无论如何，就算抛运行时异常，也应该是会执行的啊？\n\n难道一个线程会被多个请求同时使用？或者ThreadLocal并不是真正的ThreadLocal?而是会在线程之间互相影响？\n\n最后绝望的我甚至还开始怀疑起枚举类是否是线程安全的。\n\n我也是被问题迷糊了头脑，实际上这个问题非常简单，我不过是在一堆错误的前提下做着无望的挣扎，而没有去怀疑自己所坚信的这些前提是否是成立的。\n\n我觉得当遇到一个看似匪夷所思，甚至毫无可能发生的异常时，需要有清醒的头脑，来反过来质疑看似坚固的前提。\n\n下面是两个小小的提示：\n+ 线程真的会因为请求结束而结束吗？\n+ 上面finally的代码真的必然后执行吗？\n\n#### 柳暗花明\n\n很遗憾，对于上面两个问题的答案，其实都是否定的。\n\n事实上，Tomcat存在一个线程池机制，对于完成了请求的线程，并不会立即释放，而是回收到线程池中；并且，很关键的一点是，tomcat并不会清空ThreadLocal变量。\n\n第二个问题，非常可笑的，虽然finally的确必然会执行，然而这是有条件的：如果程序在try代码块之外抛了异常，那么finally将不会被执行。\n\n至此，一切谜题的答案已经展现在眼前。\n\n用户的session丢失，会导致获取xzqh那一行代码抛空指针异常，然而之前已经切换为READ库，所以当前线程已经指向了查询库，又因为抛运行时异常，所以请求结束；\n接着，线程被回收，进入线程池；过了不知道多久，有一个倒霉的请求被分配到了这个线程上执行，然后因为数据源并不会切换到WRITE中，所以INSERT操作会进入到查询库。\n\n#### 总结\n\n看似不可思议的问题， 既然真真切切的发生了，那么必然又一个合乎逻辑的解释；看似不可思议，不过是因为你误解了某些前提。\n另外我这么久也没看出问题所在，仅仅是以为我基础不够，否则如果我早知道tomcat有这么玄妙的线程池机制，那么我应该很快就能想到问题的关键点所在。\n\n不过，总的来说，这是一场很有趣的解谜体验。：）\n\n","slug":"动态数据源路由容易掉进去的坑","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymw000kh0taz3x8f129","content":"<h4 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>由于业务要求需要在不同的生产库、查询库（查询库中又包含多个子查询库）之间动态切换，所以使用了Spring提供的动态数据源路由功能。<br>这个功能的基本原理，是将具体的数据库和一个枚举类作为键值对，由Spring提供的DynamicDataSourceRouting进行管理，然后将作为key的枚举类保存在ThreadLocal中以保证线程独立。这样在业务需要时，可以动态的根据一些条件，比如用户所处的行政区划之类的变量，动态的改变当前数据源。</p>\n<p>一开始，只有生产库和查询库两个数据源之间进行切换，后来根据业务需求，需要分摊统计查询的压力，将查询库切分为11个地市的子查询库。<br>看起来，没有任何问题，只是在切换数据源时，多了一层切换操作，然后奇怪的问题发生了：本来应该插入到生产库的数据，被随机地插入到了不同的子查询库中。</p>\n<h4 id=\"代码还原\"><a href=\"#代码还原\" class=\"headerlink\" title=\"代码还原\"></a>代码还原</h4><p>以下是精简之后的代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//生产库、查询库所对应的key</div><div class=\"line\">public enum DataSourceKind&#123;</div><div class=\"line\">    READ, WRITE</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//各个查询库所对应的key</div><div class=\"line\">public enum ReadDataSourceKind&#123;</div><div class=\"line\">    NingBo, WenZhou, JiaXing, ShaoXing...//略</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//持有ThreadLocal的类，提供对于线程独立变量的访问</div><div class=\"line\">public class DataSourceHolder&#123;</div><div class=\"line\">    private static final ThreadLocal&lt;DataSourceKind&gt; dataSource = new ThreadLocal&lt;DataSourceKind&gt;();</div><div class=\"line\"></div><div class=\"line\">    //获取当前数据源</div><div class=\"line\">    public static DataSourceKind getDataSource()&#123; return dataSource.get();&#125;</div><div class=\"line\">    //设置当前数据源</div><div class=\"line\">    public static void setDataSource(DataSourceKind kind)&#123; dataSource.set(kind);&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//略过各个查询库的holder</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//继承Spring的动态数据源路由，复写获取数据源key方法</div><div class=\"line\">public class MyDynamicDataSourceRouting extends DynamicDataSourceRouting&#123;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected Object determineCurrentLookupKey() &#123;</div><div class=\"line\">        return DataSourceHolder.getDataSource();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//略过查询库的routing</div></pre></td></tr></table></figure>\n<p>具体的切换用到了SpringAOP，大致就是定义一个@DbReadOnly注解，然后当检测到有方法使用了该注解，就进行数据源的切换。<br>具体的业务场景中，只有很少一部分统计分析的请求会使用查询库，并且所有的@DbReadOnly注解基本上都是在Controller层。<br>第一步先切换到READ， 然后根据当前登录用户所处行政区划来进行查询库的切换，等到这个请求完成之后，再在finally中切换回默认的生产库来。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">public Object proceed(Proceed obj)&#123;</div><div class=\"line\">    DataSourceHolder.setDataSource(DataSourceKind.READ);</div><div class=\"line\">    User user = SessionUtils.getCurrentUser();    //获取当前登录的用户</div><div class=\"line\">    String xzqh = user.getXzqh();</div><div class=\"line\">    if(xzqh.equals(XzqhConsts.JinHua))&#123; ReadDataSourceHolder.setDataSource(ReadDataSourceKind.JinHua);&#125;</div><div class=\"line\">    else if(xzqh.equals(XzqhConsts.WenZhou)&#123; ReadDataSourceHolder.setDataSource(ReadDataSourceKind.WenZhou);&#125;)</div><div class=\"line\">    ....//略</div><div class=\"line\">    </div><div class=\"line\">    try&#123;</div><div class=\"line\">        return obj.proceed();</div><div class=\"line\">    &#125;catch(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;finally&#123;</div><div class=\"line\">        DataSourceHolder.setDataSource(DataSourceKind.WRITE);    //重置为生产库</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"分析与提示\"><a href=\"#分析与提示\" class=\"headerlink\" title=\"分析与提示\"></a>分析与提示</h4><p>有经验的老司机大概已经看出了问题所在， 数据之所以会写入到查询库的原因实在是很可笑。<br>还没明白过来的兄弟可以先看看接下来的提示。</p>\n<p>对于这个问题，我一开始根本摸不着头脑，因为在我的理解中，就算有线程没有切换回生产库，这个线程也会因为请求结束而被结束。<br>更何况涉及到查询库的那些请求根本不涉及INSERT操作。</p>\n<p>更何况怎么可能不切换回生产库呢？finally中的代码无论如何，就算抛运行时异常，也应该是会执行的啊？</p>\n<p>难道一个线程会被多个请求同时使用？或者ThreadLocal并不是真正的ThreadLocal?而是会在线程之间互相影响？</p>\n<p>最后绝望的我甚至还开始怀疑起枚举类是否是线程安全的。</p>\n<p>我也是被问题迷糊了头脑，实际上这个问题非常简单，我不过是在一堆错误的前提下做着无望的挣扎，而没有去怀疑自己所坚信的这些前提是否是成立的。</p>\n<p>我觉得当遇到一个看似匪夷所思，甚至毫无可能发生的异常时，需要有清醒的头脑，来反过来质疑看似坚固的前提。</p>\n<p>下面是两个小小的提示：</p>\n<ul>\n<li>线程真的会因为请求结束而结束吗？</li>\n<li>上面finally的代码真的必然后执行吗？</li>\n</ul>\n<h4 id=\"柳暗花明\"><a href=\"#柳暗花明\" class=\"headerlink\" title=\"柳暗花明\"></a>柳暗花明</h4><p>很遗憾，对于上面两个问题的答案，其实都是否定的。</p>\n<p>事实上，Tomcat存在一个线程池机制，对于完成了请求的线程，并不会立即释放，而是回收到线程池中；并且，很关键的一点是，tomcat并不会清空ThreadLocal变量。</p>\n<p>第二个问题，非常可笑的，虽然finally的确必然会执行，然而这是有条件的：如果程序在try代码块之外抛了异常，那么finally将不会被执行。</p>\n<p>至此，一切谜题的答案已经展现在眼前。</p>\n<p>用户的session丢失，会导致获取xzqh那一行代码抛空指针异常，然而之前已经切换为READ库，所以当前线程已经指向了查询库，又因为抛运行时异常，所以请求结束；<br>接着，线程被回收，进入线程池；过了不知道多久，有一个倒霉的请求被分配到了这个线程上执行，然后因为数据源并不会切换到WRITE中，所以INSERT操作会进入到查询库。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>看似不可思议的问题， 既然真真切切的发生了，那么必然又一个合乎逻辑的解释；看似不可思议，不过是因为你误解了某些前提。<br>另外我这么久也没看出问题所在，仅仅是以为我基础不够，否则如果我早知道tomcat有这么玄妙的线程池机制，那么我应该很快就能想到问题的关键点所在。</p>\n<p>不过，总的来说，这是一场很有趣的解谜体验。：）</p>\n","excerpt":"","more":"<h4 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>由于业务要求需要在不同的生产库、查询库（查询库中又包含多个子查询库）之间动态切换，所以使用了Spring提供的动态数据源路由功能。<br>这个功能的基本原理，是将具体的数据库和一个枚举类作为键值对，由Spring提供的DynamicDataSourceRouting进行管理，然后将作为key的枚举类保存在ThreadLocal中以保证线程独立。这样在业务需要时，可以动态的根据一些条件，比如用户所处的行政区划之类的变量，动态的改变当前数据源。</p>\n<p>一开始，只有生产库和查询库两个数据源之间进行切换，后来根据业务需求，需要分摊统计查询的压力，将查询库切分为11个地市的子查询库。<br>看起来，没有任何问题，只是在切换数据源时，多了一层切换操作，然后奇怪的问题发生了：本来应该插入到生产库的数据，被随机地插入到了不同的子查询库中。</p>\n<h4 id=\"代码还原\"><a href=\"#代码还原\" class=\"headerlink\" title=\"代码还原\"></a>代码还原</h4><p>以下是精简之后的代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//生产库、查询库所对应的key</div><div class=\"line\">public enum DataSourceKind&#123;</div><div class=\"line\">    READ, WRITE</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//各个查询库所对应的key</div><div class=\"line\">public enum ReadDataSourceKind&#123;</div><div class=\"line\">    NingBo, WenZhou, JiaXing, ShaoXing...//略</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//持有ThreadLocal的类，提供对于线程独立变量的访问</div><div class=\"line\">public class DataSourceHolder&#123;</div><div class=\"line\">    private static final ThreadLocal&lt;DataSourceKind&gt; dataSource = new ThreadLocal&lt;DataSourceKind&gt;();</div><div class=\"line\"></div><div class=\"line\">    //获取当前数据源</div><div class=\"line\">    public static DataSourceKind getDataSource()&#123; return dataSource.get();&#125;</div><div class=\"line\">    //设置当前数据源</div><div class=\"line\">    public static void setDataSource(DataSourceKind kind)&#123; dataSource.set(kind);&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//略过各个查询库的holder</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//继承Spring的动态数据源路由，复写获取数据源key方法</div><div class=\"line\">public class MyDynamicDataSourceRouting extends DynamicDataSourceRouting&#123;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected Object determineCurrentLookupKey() &#123;</div><div class=\"line\">        return DataSourceHolder.getDataSource();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//略过查询库的routing</div></pre></td></tr></table></figure>\n<p>具体的切换用到了SpringAOP，大致就是定义一个@DbReadOnly注解，然后当检测到有方法使用了该注解，就进行数据源的切换。<br>具体的业务场景中，只有很少一部分统计分析的请求会使用查询库，并且所有的@DbReadOnly注解基本上都是在Controller层。<br>第一步先切换到READ， 然后根据当前登录用户所处行政区划来进行查询库的切换，等到这个请求完成之后，再在finally中切换回默认的生产库来。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">public Object proceed(Proceed obj)&#123;</div><div class=\"line\">    DataSourceHolder.setDataSource(DataSourceKind.READ);</div><div class=\"line\">    User user = SessionUtils.getCurrentUser();    //获取当前登录的用户</div><div class=\"line\">    String xzqh = user.getXzqh();</div><div class=\"line\">    if(xzqh.equals(XzqhConsts.JinHua))&#123; ReadDataSourceHolder.setDataSource(ReadDataSourceKind.JinHua);&#125;</div><div class=\"line\">    else if(xzqh.equals(XzqhConsts.WenZhou)&#123; ReadDataSourceHolder.setDataSource(ReadDataSourceKind.WenZhou);&#125;)</div><div class=\"line\">    ....//略</div><div class=\"line\">    </div><div class=\"line\">    try&#123;</div><div class=\"line\">        return obj.proceed();</div><div class=\"line\">    &#125;catch(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;finally&#123;</div><div class=\"line\">        DataSourceHolder.setDataSource(DataSourceKind.WRITE);    //重置为生产库</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"分析与提示\"><a href=\"#分析与提示\" class=\"headerlink\" title=\"分析与提示\"></a>分析与提示</h4><p>有经验的老司机大概已经看出了问题所在， 数据之所以会写入到查询库的原因实在是很可笑。<br>还没明白过来的兄弟可以先看看接下来的提示。</p>\n<p>对于这个问题，我一开始根本摸不着头脑，因为在我的理解中，就算有线程没有切换回生产库，这个线程也会因为请求结束而被结束。<br>更何况涉及到查询库的那些请求根本不涉及INSERT操作。</p>\n<p>更何况怎么可能不切换回生产库呢？finally中的代码无论如何，就算抛运行时异常，也应该是会执行的啊？</p>\n<p>难道一个线程会被多个请求同时使用？或者ThreadLocal并不是真正的ThreadLocal?而是会在线程之间互相影响？</p>\n<p>最后绝望的我甚至还开始怀疑起枚举类是否是线程安全的。</p>\n<p>我也是被问题迷糊了头脑，实际上这个问题非常简单，我不过是在一堆错误的前提下做着无望的挣扎，而没有去怀疑自己所坚信的这些前提是否是成立的。</p>\n<p>我觉得当遇到一个看似匪夷所思，甚至毫无可能发生的异常时，需要有清醒的头脑，来反过来质疑看似坚固的前提。</p>\n<p>下面是两个小小的提示：</p>\n<ul>\n<li>线程真的会因为请求结束而结束吗？</li>\n<li>上面finally的代码真的必然后执行吗？</li>\n</ul>\n<h4 id=\"柳暗花明\"><a href=\"#柳暗花明\" class=\"headerlink\" title=\"柳暗花明\"></a>柳暗花明</h4><p>很遗憾，对于上面两个问题的答案，其实都是否定的。</p>\n<p>事实上，Tomcat存在一个线程池机制，对于完成了请求的线程，并不会立即释放，而是回收到线程池中；并且，很关键的一点是，tomcat并不会清空ThreadLocal变量。</p>\n<p>第二个问题，非常可笑的，虽然finally的确必然会执行，然而这是有条件的：如果程序在try代码块之外抛了异常，那么finally将不会被执行。</p>\n<p>至此，一切谜题的答案已经展现在眼前。</p>\n<p>用户的session丢失，会导致获取xzqh那一行代码抛空指针异常，然而之前已经切换为READ库，所以当前线程已经指向了查询库，又因为抛运行时异常，所以请求结束；<br>接着，线程被回收，进入线程池；过了不知道多久，有一个倒霉的请求被分配到了这个线程上执行，然后因为数据源并不会切换到WRITE中，所以INSERT操作会进入到查询库。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>看似不可思议的问题， 既然真真切切的发生了，那么必然又一个合乎逻辑的解释；看似不可思议，不过是因为你误解了某些前提。<br>另外我这么久也没看出问题所在，仅仅是以为我基础不够，否则如果我早知道tomcat有这么玄妙的线程池机制，那么我应该很快就能想到问题的关键点所在。</p>\n<p>不过，总的来说，这是一场很有趣的解谜体验。：）</p>\n"},{"title":"hexo+ubuntu+github博客环境搭建","date":"2016-12-26T15:28:05.000Z","_content":"总算把环境给搭好了。\n架构为：hexo+github，系统为ubuntu。\n\n### 源代码管理\n首先在github创建一个仓库，建立两个分支：master，gh-pages。\nmaster用来存放源代码，gh-pages用来存放编译后的html静态页面文件。\n前者手动管理，后者配置在conf中由hexo进行管理。\n+ 创建文件夹\n```\nmkdir repository\ncd repository\n```\n\n+ 建立git环境\n```\ngit clone https://github.com/LiangKim/myblog.git\n```\n这样在repository文件夹下就自动多了myblog文件夹。\n此时该文件夹应该是空的，如果不是也可以把其中无用文件删了然后提交.\n\n### hexo\n+ 建立hexo环境\n进行到此步时，默认已经安装好了nodejs，npm等依赖。如有不懂可以google之。\n要注意的是，在ubuntu环境下，安装nodejs最好通过编译源代码安装。apt的方式总会出莫名其妙的问题。\n```\nsudo npm install hexo -g\nnpm install hexo-deployer-git --save\n```\n第一行命令安装hexo环境，第二行命令安装了git插件。\n进入myblog目录:\n```\nhexo init\n```\n这一步代码执行了\n","source":"_posts/博客环境搭建.md","raw":"---\ntitle: hexo+ubuntu+github博客环境搭建\ndate: 2016-12-26 23:28:05\ntags:\n- hexo\n- ubuntu\n- shadowsocks\ncategory:\n- 通用技术\n---\n总算把环境给搭好了。\n架构为：hexo+github，系统为ubuntu。\n\n### 源代码管理\n首先在github创建一个仓库，建立两个分支：master，gh-pages。\nmaster用来存放源代码，gh-pages用来存放编译后的html静态页面文件。\n前者手动管理，后者配置在conf中由hexo进行管理。\n+ 创建文件夹\n```\nmkdir repository\ncd repository\n```\n\n+ 建立git环境\n```\ngit clone https://github.com/LiangKim/myblog.git\n```\n这样在repository文件夹下就自动多了myblog文件夹。\n此时该文件夹应该是空的，如果不是也可以把其中无用文件删了然后提交.\n\n### hexo\n+ 建立hexo环境\n进行到此步时，默认已经安装好了nodejs，npm等依赖。如有不懂可以google之。\n要注意的是，在ubuntu环境下，安装nodejs最好通过编译源代码安装。apt的方式总会出莫名其妙的问题。\n```\nsudo npm install hexo -g\nnpm install hexo-deployer-git --save\n```\n第一行命令安装hexo环境，第二行命令安装了git插件。\n进入myblog目录:\n```\nhexo init\n```\n这一步代码执行了\n","slug":"博客环境搭建","published":1,"updated":"2017-01-26T14:51:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysq8ymy000mh0ta00pueosi","content":"<p>总算把环境给搭好了。<br>架构为：hexo+github，系统为ubuntu。</p>\n<h3 id=\"源代码管理\"><a href=\"#源代码管理\" class=\"headerlink\" title=\"源代码管理\"></a>源代码管理</h3><p>首先在github创建一个仓库，建立两个分支：master，gh-pages。<br>master用来存放源代码，gh-pages用来存放编译后的html静态页面文件。<br>前者手动管理，后者配置在conf中由hexo进行管理。</p>\n<ul>\n<li><p>创建文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir repository</div><div class=\"line\">cd repository</div></pre></td></tr></table></figure>\n</li>\n<li><p>建立git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/LiangKim/myblog.git</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这样在repository文件夹下就自动多了myblog文件夹。<br>此时该文件夹应该是空的，如果不是也可以把其中无用文件删了然后提交.</p>\n<h3 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h3><ul>\n<li>建立hexo环境<br>进行到此步时，默认已经安装好了nodejs，npm等依赖。如有不懂可以google之。<br>要注意的是，在ubuntu环境下，安装nodejs最好通过编译源代码安装。apt的方式总会出莫名其妙的问题。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install hexo -g</div><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>第一行命令安装hexo环境，第二行命令安装了git插件。<br>进入myblog目录:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>这一步代码执行了</p>\n","excerpt":"","more":"<p>总算把环境给搭好了。<br>架构为：hexo+github，系统为ubuntu。</p>\n<h3 id=\"源代码管理\"><a href=\"#源代码管理\" class=\"headerlink\" title=\"源代码管理\"></a>源代码管理</h3><p>首先在github创建一个仓库，建立两个分支：master，gh-pages。<br>master用来存放源代码，gh-pages用来存放编译后的html静态页面文件。<br>前者手动管理，后者配置在conf中由hexo进行管理。</p>\n<ul>\n<li><p>创建文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir repository</div><div class=\"line\">cd repository</div></pre></td></tr></table></figure>\n</li>\n<li><p>建立git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/LiangKim/myblog.git</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这样在repository文件夹下就自动多了myblog文件夹。<br>此时该文件夹应该是空的，如果不是也可以把其中无用文件删了然后提交.</p>\n<h3 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h3><ul>\n<li>建立hexo环境<br>进行到此步时，默认已经安装好了nodejs，npm等依赖。如有不懂可以google之。<br>要注意的是，在ubuntu环境下，安装nodejs最好通过编译源代码安装。apt的方式总会出莫名其妙的问题。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install hexo -g</div><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>第一行命令安装hexo环境，第二行命令安装了git插件。<br>进入myblog目录:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>这一步代码执行了</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciysq8ymd0006h0tago2gfyvs","category_id":"ciysq8ym30003h0tavt9hk72u","_id":"ciysq8ymp000bh0tailzy2gt1"},{"post_id":"ciysq8ylf0000h0taifc6ewxe","category_id":"ciysq8ym30003h0tavt9hk72u","_id":"ciysq8yms000fh0ta070e3tdk"},{"post_id":"ciysq8ylz0002h0tat7m19t07","category_id":"ciysq8ym30003h0tavt9hk72u","_id":"ciysq8ymw000jh0tabq5e9u83"},{"post_id":"ciysq8ymt000gh0tal9d6iyqo","category_id":"ciysq8ym30003h0tavt9hk72u","_id":"ciysq8yn0000oh0tau3pkcnjc"},{"post_id":"ciysq8ym60004h0tata8maczt","category_id":"ciysq8ym30003h0tavt9hk72u","_id":"ciysq8yn2000rh0tasu14juhu"},{"post_id":"ciysq8ymh0007h0tagnt9f8f2","category_id":"ciysq8ymx000lh0tagh7ot9bx","_id":"ciysq8yn3000th0tafzno6em1"},{"post_id":"ciysq8yml0009h0tap1ij1oni","category_id":"ciysq8yn1000qh0tauwt7bakf","_id":"ciysq8yn5000xh0ta9lurtjq6"},{"post_id":"ciysq8ymp000dh0tax13b7kjs","category_id":"ciysq8yn4000uh0tao7kvy2bo","_id":"ciysq8yn70011h0ta4y84jfev"},{"post_id":"ciysq8ymw000kh0taz3x8f129","category_id":"ciysq8yn6000yh0ta61zfq6ax","_id":"ciysq8yn80015h0tay3i1jjzq"},{"post_id":"ciysq8ymy000mh0ta00pueosi","category_id":"ciysq8yn80012h0ta7wqpvxiq","_id":"ciysq8yna0019h0ta685q0ef5"}],"PostTag":[{"post_id":"ciysq8ylz0002h0tat7m19t07","tag_id":"ciysq8ymb0005h0ta98ryut5v","_id":"ciysq8ymp000ch0ta9iytc1ir"},{"post_id":"ciysq8ym60004h0tata8maczt","tag_id":"ciysq8ymb0005h0ta98ryut5v","_id":"ciysq8ymw000ih0ta611if0ak"},{"post_id":"ciysq8ymd0006h0tago2gfyvs","tag_id":"ciysq8ymb0005h0ta98ryut5v","_id":"ciysq8yn0000ph0ta0atmw11p"},{"post_id":"ciysq8ymh0007h0tagnt9f8f2","tag_id":"ciysq8yn0000nh0tawzbg1trx","_id":"ciysq8yn5000wh0tabyvvoqqb"},{"post_id":"ciysq8ymh0007h0tagnt9f8f2","tag_id":"ciysq8yn3000sh0ta5s3e0wox","_id":"ciysq8yn6000zh0tar9xb169c"},{"post_id":"ciysq8yml0009h0tap1ij1oni","tag_id":"ciysq8yn5000vh0ta0mok32no","_id":"ciysq8yn80014h0ta70torljn"},{"post_id":"ciysq8yml0009h0tap1ij1oni","tag_id":"ciysq8yn60010h0tafjxrm6q4","_id":"ciysq8yn90016h0ta98ugfftr"},{"post_id":"ciysq8ymp000dh0tax13b7kjs","tag_id":"ciysq8yn80013h0ta0y44a3cx","_id":"ciysq8yna0018h0tapmrtw7ev"},{"post_id":"ciysq8ymt000gh0tal9d6iyqo","tag_id":"ciysq8yn90017h0tadxectkao","_id":"ciysq8yna001bh0ta1ze3cv8s"},{"post_id":"ciysq8ymw000kh0taz3x8f129","tag_id":"ciysq8yna001ah0taimghb99n","_id":"ciysq8ynd001fh0tapi09st0j"},{"post_id":"ciysq8ymw000kh0taz3x8f129","tag_id":"ciysq8yna001ch0taxniidjgk","_id":"ciysq8ynd001gh0tar2cs3wnb"},{"post_id":"ciysq8ymw000kh0taz3x8f129","tag_id":"ciysq8ynb001dh0ta5y0skhae","_id":"ciysq8yne001ih0ta2rcagia0"},{"post_id":"ciysq8ymy000mh0ta00pueosi","tag_id":"ciysq8ync001eh0tawuescsmy","_id":"ciysq8ynf001kh0tab70hfq4e"},{"post_id":"ciysq8ymy000mh0ta00pueosi","tag_id":"ciysq8ynd001hh0tarwvw078m","_id":"ciysq8ynf001lh0ta2yga511i"},{"post_id":"ciysq8ymy000mh0ta00pueosi","tag_id":"ciysq8yne001jh0tallirrnjr","_id":"ciysq8yng001mh0tan57zzfm9"}],"Tag":[{"name":"日志","_id":"ciysq8ymb0005h0ta98ryut5v"},{"name":"C","_id":"ciysq8yn0000nh0tawzbg1trx"},{"name":"阅读笔记","_id":"ciysq8yn3000sh0ta5s3e0wox"},{"name":"tomcat","_id":"ciysq8yn5000vh0ta0mok32no"},{"name":"dbcp","_id":"ciysq8yn60010h0tafjxrm6q4"},{"name":"全文检索","_id":"ciysq8yn80013h0ta0y44a3cx"},{"name":"mac","_id":"ciysq8yn90017h0tadxectkao"},{"name":"BUG","_id":"ciysq8yna001ah0taimghb99n"},{"name":"Spring","_id":"ciysq8yna001ch0taxniidjgk"},{"name":"DynamicDataSourceRouting","_id":"ciysq8ynb001dh0ta5y0skhae"},{"name":"hexo","_id":"ciysq8ync001eh0tawuescsmy"},{"name":"ubuntu","_id":"ciysq8ynd001hh0tarwvw078m"},{"name":"shadowsocks","_id":"ciysq8yne001jh0tallirrnjr"}]}}